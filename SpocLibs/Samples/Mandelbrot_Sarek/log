adding normalize
(* PlusF32 ############# typ unknown -> unknown *)
(* MulF32 ############# typ float32 *)
(* Id x_ ############# typ float32 *)
x_ of type float32
(* Id x_ ############# typ float32 *)
x_ of type float32
(* MulF32 ############# typ float32 *)
(* Id y_ ############# typ float32 *)
y_ of type float32
(* Id y_ ############# typ float32 *)
y_ of type float32

Unknown : 0 


(* PlusF32 ############# typ unknown -> unknown *)
(* MulF32 ############# typ float32 *)
(* Id x_ ############# typ float32 *)
x_ of type float32
(* Id x_ ############# typ float32 *)
x_ of type float32
(* MulF32 ############# typ float32 *)
(* Id y_ ############# typ float32 *)
y_ of type float32
(* Id y_ ############# typ float32 *)
y_ of type float32

Unknown : 0 


fun_type : float32
(* val PlusF32 *)
(* val MulF32 *)
(* val MulF32 *)
(* val2 b PlusF32 *)
(* val2 End *)
(* val2 PlusF32 *)
(* val2 MulF32 *)
(* val2 MulF32 *)
/....... float32 -> float32 -> float32
adding y
adding x
adding x0
adding y0
adding cpt
adding x1LOL
adding y1LOL
adding x1
adding y1
adding x2
adding y2
adding a
adding b
adding norm
(* Open ############# typ unknown *)
opening module Std
(* Bind ############# typ unknown *)
ADDDD: normalize
%!(* Bind ############# typ unknown *)
(* Plus32 ############# typ unknown *)
(* Id thread_idx_y ############# typ int32 *)
(* Mul32 ############# typ int32 *)
(* Id block_idx_y ############# typ int32 *)
(* Id block_dim_y ############# typ int32 *)
(* Bind ############# typ unknown *)
(* Plus32 ############# typ unknown *)
(* Id thread_idx_x ############# typ int32 *)
(* Mul32 ############# typ int32 *)
(* Id block_idx_x ############# typ int32 *)
(* Id block_dim_x ############# typ int32 *)
(* Seq ############# typ unknown *)
(* If ############# typ unit *)
(* BoolOr ############# typ bool *)
(* BoolGtE32 ############# typ bool *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
UNKNOWN : Ref
(* BoolGtE32 ############# typ bool *)
(* Id x ############# typ int32 *)
x of type int32
(* Ref ############# typ int32 *)
UNKNOWN : Ref
(* BoolOr ############# typ bool *)
(* BoolGtE32 ############# typ bool *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
height of type int32
UNKNOWN : Ref
(* BoolGtE32 ############# typ bool *)
(* Id x ############# typ int32 *)
x of type int32
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* App return ############# typ unit *)
(* typ Noop +++-> unknown *)
(* Noop ############# typ unit *)
(* >>>>>>>>>>>> typ unit -> unit *)
(* <<<<<<<<<<<< typ unit *)
(* Bind ############# typ unknown *)
(* Plus32 ############# typ unknown *)
(* Id x ############# typ int32 *)
x of type int32
(* Ref ############# typ int32 *)
UNKNOWN : Ref
(* Bind ############# typ unknown *)
(* Plus32 ############# typ unknown *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
UNKNOWN : Ref
(* Bind ############# typ unknown *)
(* Int32 ############# typ unknown *)
(* Bind ############# typ unknown *)
(* Float32 ############# typ unknown *)
(* Bind ############# typ unknown *)
(* Float32 ############# typ unknown *)
(* Bind ############# typ unknown *)
(* Float32 ############# typ unknown *)
(* Bind ############# typ unknown *)
(* Float32 ############# typ unknown *)
(* Bind ############# typ unknown *)
(* Float32 ############# typ unknown *)
(* Bind ############# typ unknown *)
(* Float32 ############# typ unknown *)
(* Bind ############# typ unknown *)
(* MinF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* DivF32 ############# typ float32 *)
(* DivF32 ############# typ float32 *)
(* App float ############# typ float32 *)
(* typ Id x0 +++-> unknown *)
(* Id x0 ############# typ int32 *)
x0 of type int32
(* >>>>>>>>>>>> typ int32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* App float ############# typ float32 *)
(* typ Ref +++-> unknown *)
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* >>>>>>>>>>>> typ int32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* Ref ############# typ float32 *)
UNKNOWN : Ref
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
(* MinF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* DivF32 ############# typ float32 *)
(* DivF32 ############# typ float32 *)
(* App float ############# typ float32 *)
(* typ Id y0 +++-> unknown *)
(* Id y0 ############# typ int32 *)
y0 of type int32
(* >>>>>>>>>>>> typ int32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* App float ############# typ float32 *)
(* typ Ref +++-> unknown *)
(* Ref ############# typ int32 *)
height of type int32
UNKNOWN : Ref
(* >>>>>>>>>>>> typ int32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* Ref ############# typ float32 *)
zoom of type float32
UNKNOWN : Ref
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
(* App ############# typ unknown *)
(* App normalize ############# typ unknown *)
(* typ Id x1LOL +++-> unknown *)
(* Id x1LOL ############# typ float32 *)
x1LOL of type float32
(* >>>>>>>>>>>> typ float32 -> float32 -> float32 *)
(* <<<<<<<<<<<< typ float32 -> float32 *)
(* typ Id y1LOL +++-> unknown *)
(* Id y1LOL ############# typ float32 *)
y1LOL of type float32
(* >>>>>>>>>>>> typ float32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* Seq ############# typ unknown *)
(* While ############# typ unit *)
(* BoolAnd ############# typ bool *)
(* BoolLt32 ############# typ bool *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Ref ############# typ int32 *)
UNKNOWN : Ref
(* BoolLtEF ############# typ bool *)
(* Id norm ############# typ float32 *)
norm of type float32
(* Float32 ############# typ float32 *)
(* BoolAnd ############# typ bool *)
(* BoolLt32 ############# typ bool *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Ref ############# typ int32 *)
max_iter of type int32
UNKNOWN : Ref
(* BoolLtEF ############# typ bool *)
(* Id norm ############# typ float32 *)
norm of type float32
(* Float32 ############# typ float32 *)
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Plus32 ############# typ unknown *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ unknown *)
cpt of type unknown
(* Plus32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id a ############# typ float32 *)
a of type float32
(* Id x2 ############# typ unknown *)
x2 of type unknown
UNKNOWN : Id x2
(* PlusF32 ############# typ unknown *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id a ############# typ float32 *)
a of type float32
(* Id x2 ############# typ float32 *)
x2 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id b ############# typ float32 *)
b of type float32
(* Id y2 ############# typ unknown *)
y2 of type unknown
UNKNOWN : Id y2
(* PlusF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id b ############# typ float32 *)
b of type float32
(* Id y2 ############# typ float32 *)
y2 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* Id x1 ############# typ unknown *)
x1 of type unknown
(* Id x2 ############# typ float32 *)
x2 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* Id y1 ############# typ unknown *)
y1 of type unknown
(* Id y2 ############# typ float32 *)
y2 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id norm ############# typ unknown *)
norm of type unknown
(* PlusF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id norm ############# typ float32 *)
norm of type float32
(* BoolAnd ############# typ bool *)
(* BoolLt32 ############# typ bool *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Ref ############# typ int32 *)
max_iter of type int32
UNKNOWN : Ref
(* BoolLtEF ############# typ bool *)
(* Id norm ############# typ float32 *)
norm of type float32
(* Float32 ############# typ float32 *)
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Plus32 ############# typ unknown *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ unknown *)
cpt of type unknown
(* Plus32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id a ############# typ float32 *)
a of type float32
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* PlusF32 ############# typ float32 *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id a ############# typ float32 *)
a of type float32
(* Id x2 ############# typ float32 *)
x2 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id b ############# typ float32 *)
b of type float32
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* PlusF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id b ############# typ float32 *)
b of type float32
(* Id y2 ############# typ float32 *)
y2 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* Id x1 ############# typ unknown *)
x1 of type unknown
(* Id x2 ############# typ float32 *)
x2 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* Id y1 ############# typ unknown *)
y1 of type unknown
(* Id y2 ############# typ float32 *)
y2 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id norm ############# typ unknown *)
norm of type unknown
(* PlusF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id norm ############# typ float32 *)
norm of type float32
(* VecSet ############# typ unknown *)
(* VecGet ############# typ unknown *)
(* Id img ############# typ unknown vector *)
img of type unknown vector
UNKNOWN : Id img
(* Plus32 ############# typ int32 *)
(* Mul32 ############# typ int32 *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* Id x ############# typ int32 *)
x of type int32
UNKNOWN : VecGet
(* Id cpt ############# typ unknown vector *)
cpt of type unknown vector
closing module Std
Unknown : 4 


(* Open ############# typ unknown *)
opening module Std
(* Bind ############# typ unknown *)
ADDDD: normalize
%!(* Bind ############# typ unknown *)
(* Plus32 ############# typ int32 *)
(* Id thread_idx_y ############# typ int32 *)
(* Mul32 ############# typ int32 *)
(* Id block_idx_y ############# typ int32 *)
(* Id block_dim_y ############# typ int32 *)
(* Bind ############# typ unknown *)
(* Plus32 ############# typ int32 *)
(* Id thread_idx_x ############# typ int32 *)
(* Mul32 ############# typ int32 *)
(* Id block_idx_x ############# typ int32 *)
(* Id block_dim_x ############# typ int32 *)
(* Seq ############# typ unknown *)
(* If ############# typ unit *)
(* BoolOr ############# typ bool *)
(* BoolGtE32 ############# typ bool *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
height of type int32
UNKNOWN : Ref
(* BoolGtE32 ############# typ bool *)
(* Id x ############# typ int32 *)
x of type int32
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* BoolOr ############# typ bool *)
(* BoolGtE32 ############# typ bool *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
height of type int32
UNKNOWN : Ref
(* BoolGtE32 ############# typ bool *)
(* Id x ############# typ int32 *)
x of type int32
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* App return ############# typ unit *)
(* typ Noop +++-> unit *)
(* Noop ############# typ unit *)
(* >>>>>>>>>>>> typ unit -> unit *)
(* <<<<<<<<<<<< typ unit *)
(* Bind ############# typ unknown *)
(* Plus32 ############# typ int32 *)
(* Id x ############# typ int32 *)
x of type int32
(* Ref ############# typ int32 *)
shiftx of type int32
UNKNOWN : Ref
(* Bind ############# typ unknown *)
(* Plus32 ############# typ int32 *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
shifty of type int32
UNKNOWN : Ref
(* Bind ############# typ unknown *)
(* Int32 ############# typ int32 *)
(* Bind ############# typ unknown *)
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* DivF32 ############# typ float32 *)
(* DivF32 ############# typ float32 *)
(* App float ############# typ float32 *)
(* typ Id x0 +++-> int32 *)
(* Id x0 ############# typ int32 *)
x0 of type int32
(* >>>>>>>>>>>> typ int32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* App float ############# typ float32 *)
(* typ Ref +++-> unknown *)
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* >>>>>>>>>>>> typ int32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* Ref ############# typ float32 *)
zoom of type float32
UNKNOWN : Ref
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* DivF32 ############# typ float32 *)
(* DivF32 ############# typ float32 *)
(* App float ############# typ float32 *)
(* typ Id y0 +++-> int32 *)
(* Id y0 ############# typ int32 *)
y0 of type int32
(* >>>>>>>>>>>> typ int32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* App float ############# typ float32 *)
(* typ Ref +++-> unknown *)
(* Ref ############# typ int32 *)
height of type int32
UNKNOWN : Ref
(* >>>>>>>>>>>> typ int32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* Ref ############# typ float32 *)
zoom of type float32
UNKNOWN : Ref
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
(* App ############# typ float32 *)
(* App normalize ############# typ float32 *)
(* typ Id x1LOL +++-> float32 *)
(* Id x1LOL ############# typ float32 *)
x1LOL of type float32
(* >>>>>>>>>>>> typ float32 -> float32 -> float32 *)
(* <<<<<<<<<<<< typ float32 -> float32 *)
(* typ Id y1LOL +++-> float32 *)
(* Id y1LOL ############# typ float32 *)
y1LOL of type float32
(* >>>>>>>>>>>> typ float32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* Seq ############# typ unknown *)
(* While ############# typ unit *)
(* BoolAnd ############# typ bool *)
(* BoolLt32 ############# typ bool *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Ref ############# typ int32 *)
max_iter of type int32
UNKNOWN : Ref
(* BoolLtEF ############# typ bool *)
(* Id norm ############# typ float32 *)
norm of type float32
(* Float32 ############# typ float32 *)
(* BoolAnd ############# typ bool *)
(* BoolLt32 ############# typ bool *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Ref ############# typ int32 *)
max_iter of type int32
UNKNOWN : Ref
(* BoolLtEF ############# typ bool *)
(* Id norm ############# typ float32 *)
norm of type float32
(* Float32 ############# typ float32 *)
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Plus32 ############# typ unknown *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ unknown *)
cpt of type unknown
(* Plus32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id a ############# typ float32 *)
a of type float32
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* PlusF32 ############# typ float32 *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id a ############# typ float32 *)
a of type float32
(* Id x2 ############# typ float32 *)
x2 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id b ############# typ float32 *)
b of type float32
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* PlusF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id b ############# typ float32 *)
b of type float32
(* Id y2 ############# typ float32 *)
y2 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* Id x1 ############# typ unknown *)
x1 of type unknown
(* Id x2 ############# typ float32 *)
x2 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* Id y1 ############# typ unknown *)
y1 of type unknown
(* Id y2 ############# typ float32 *)
y2 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id norm ############# typ unknown *)
norm of type unknown
(* PlusF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id norm ############# typ float32 *)
norm of type float32
(* BoolAnd ############# typ bool *)
(* BoolLt32 ############# typ bool *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Ref ############# typ int32 *)
max_iter of type int32
UNKNOWN : Ref
(* BoolLtEF ############# typ bool *)
(* Id norm ############# typ float32 *)
norm of type float32
(* Float32 ############# typ float32 *)
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Plus32 ############# typ unknown *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ unknown *)
cpt of type unknown
(* Plus32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id a ############# typ float32 *)
a of type float32
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* PlusF32 ############# typ float32 *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id a ############# typ float32 *)
a of type float32
(* Id x2 ############# typ float32 *)
x2 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id b ############# typ float32 *)
b of type float32
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* PlusF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id b ############# typ float32 *)
b of type float32
(* Id y2 ############# typ float32 *)
y2 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* Id x1 ############# typ unknown *)
x1 of type unknown
(* Id x2 ############# typ float32 *)
x2 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* Id y1 ############# typ unknown *)
y1 of type unknown
(* Id y2 ############# typ float32 *)
y2 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id norm ############# typ unknown *)
norm of type unknown
(* PlusF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id norm ############# typ float32 *)
norm of type float32
(* VecSet ############# typ unknown *)
(* VecGet ############# typ int32 *)
(* Id img ############# typ int32 vector *)
img of type int32 vector
(* Plus32 ############# typ int32 *)
(* Mul32 ############# typ int32 *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* Id x ############# typ int32 *)
x of type int32
(* Id cpt ############# typ int32 *)
cpt of type int32
closing module Std
Unknown : 0 


(* Open ############# typ unknown *)
opening module Std
(* Bind ############# typ unknown *)
ADDDD: normalize
%!(* Bind ############# typ unknown *)
(* Plus32 ############# typ int32 *)
(* Id thread_idx_y ############# typ int32 *)
(* Mul32 ############# typ int32 *)
(* Id block_idx_y ############# typ int32 *)
(* Id block_dim_y ############# typ int32 *)
(* Bind ############# typ unknown *)
(* Plus32 ############# typ int32 *)
(* Id thread_idx_x ############# typ int32 *)
(* Mul32 ############# typ int32 *)
(* Id block_idx_x ############# typ int32 *)
(* Id block_dim_x ############# typ int32 *)
(* Seq ############# typ unknown *)
(* If ############# typ unit *)
(* BoolOr ############# typ bool *)
(* BoolGtE32 ############# typ bool *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
height of type int32
UNKNOWN : Ref
(* BoolGtE32 ############# typ bool *)
(* Id x ############# typ int32 *)
x of type int32
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* BoolOr ############# typ bool *)
(* BoolGtE32 ############# typ bool *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
height of type int32
UNKNOWN : Ref
(* BoolGtE32 ############# typ bool *)
(* Id x ############# typ int32 *)
x of type int32
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* App return ############# typ unit *)
(* typ Noop +++-> unit *)
(* Noop ############# typ unit *)
(* >>>>>>>>>>>> typ unit -> unit *)
(* <<<<<<<<<<<< typ unit *)
(* Bind ############# typ unknown *)
(* Plus32 ############# typ int32 *)
(* Id x ############# typ int32 *)
x of type int32
(* Ref ############# typ int32 *)
shiftx of type int32
UNKNOWN : Ref
(* Bind ############# typ unknown *)
(* Plus32 ############# typ int32 *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
shifty of type int32
UNKNOWN : Ref
(* Bind ############# typ unknown *)
(* Int32 ############# typ int32 *)
(* Bind ############# typ unknown *)
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* DivF32 ############# typ float32 *)
(* DivF32 ############# typ float32 *)
(* App float ############# typ float32 *)
(* typ Id x0 +++-> int32 *)
(* Id x0 ############# typ int32 *)
x0 of type int32
(* >>>>>>>>>>>> typ int32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* App float ############# typ float32 *)
(* typ Ref +++-> unknown *)
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* >>>>>>>>>>>> typ int32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* Ref ############# typ float32 *)
zoom of type float32
UNKNOWN : Ref
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* DivF32 ############# typ float32 *)
(* DivF32 ############# typ float32 *)
(* App float ############# typ float32 *)
(* typ Id y0 +++-> int32 *)
(* Id y0 ############# typ int32 *)
y0 of type int32
(* >>>>>>>>>>>> typ int32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* App float ############# typ float32 *)
(* typ Ref +++-> unknown *)
(* Ref ############# typ int32 *)
height of type int32
UNKNOWN : Ref
(* >>>>>>>>>>>> typ int32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* Ref ############# typ float32 *)
zoom of type float32
UNKNOWN : Ref
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
(* App ############# typ float32 *)
(* App normalize ############# typ float32 *)
(* typ Id x1LOL +++-> float32 *)
(* Id x1LOL ############# typ float32 *)
x1LOL of type float32
(* >>>>>>>>>>>> typ float32 -> float32 -> float32 *)
(* <<<<<<<<<<<< typ float32 -> float32 *)
(* typ Id y1LOL +++-> float32 *)
(* Id y1LOL ############# typ float32 *)
y1LOL of type float32
(* >>>>>>>>>>>> typ float32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* Seq ############# typ unknown *)
(* While ############# typ unit *)
(* BoolAnd ############# typ bool *)
(* BoolLt32 ############# typ bool *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Ref ############# typ int32 *)
max_iter of type int32
UNKNOWN : Ref
(* BoolLtEF ############# typ bool *)
(* Id norm ############# typ float32 *)
norm of type float32
(* Float32 ############# typ float32 *)
(* BoolAnd ############# typ bool *)
(* BoolLt32 ############# typ bool *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Ref ############# typ int32 *)
max_iter of type int32
UNKNOWN : Ref
(* BoolLtEF ############# typ bool *)
(* Id norm ############# typ float32 *)
norm of type float32
(* Float32 ############# typ float32 *)
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Plus32 ############# typ unknown *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ unknown *)
cpt of type unknown
(* Plus32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id a ############# typ float32 *)
a of type float32
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* PlusF32 ############# typ float32 *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id a ############# typ float32 *)
a of type float32
(* Id x2 ############# typ float32 *)
x2 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id b ############# typ float32 *)
b of type float32
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* PlusF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id b ############# typ float32 *)
b of type float32
(* Id y2 ############# typ float32 *)
y2 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* Id x1 ############# typ unknown *)
x1 of type unknown
(* Id x2 ############# typ float32 *)
x2 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* Id y1 ############# typ unknown *)
y1 of type unknown
(* Id y2 ############# typ float32 *)
y2 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id norm ############# typ unknown *)
norm of type unknown
(* PlusF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id norm ############# typ float32 *)
norm of type float32
(* BoolAnd ############# typ bool *)
(* BoolLt32 ############# typ bool *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Ref ############# typ int32 *)
max_iter of type int32
UNKNOWN : Ref
(* BoolLtEF ############# typ bool *)
(* Id norm ############# typ float32 *)
norm of type float32
(* Float32 ############# typ float32 *)
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Plus32 ############# typ unknown *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ unknown *)
cpt of type unknown
(* Plus32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id a ############# typ float32 *)
a of type float32
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* PlusF32 ############# typ float32 *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id a ############# typ float32 *)
a of type float32
(* Id x2 ############# typ float32 *)
x2 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id b ############# typ float32 *)
b of type float32
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* PlusF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id b ############# typ float32 *)
b of type float32
(* Id y2 ############# typ float32 *)
y2 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* Id x1 ############# typ unknown *)
x1 of type unknown
(* Id x2 ############# typ float32 *)
x2 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* Id y1 ############# typ unknown *)
y1 of type unknown
(* Id y2 ############# typ float32 *)
y2 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id norm ############# typ unknown *)
norm of type unknown
(* PlusF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id norm ############# typ float32 *)
norm of type float32
(* VecSet ############# typ unknown *)
(* VecGet ############# typ int32 *)
(* Id img ############# typ int32 vector *)
img of type int32 vector
(* Plus32 ############# typ int32 *)
(* Mul32 ############# typ int32 *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* Id x ############# typ int32 *)
x of type int32
(* Id cpt ############# typ int32 *)
cpt of type int32
closing module Std
Unknown : 0 


(* val Open *)
opening module Std
(* val Bind *)
(* val Bind *)
(* val Plus32 *)
(* val Mul32 *)
(* val Bind *)
(* val Plus32 *)
(* val Mul32 *)
(* val Seq *)
(* val If *)
(* val BoolOr *)
(* val BoolGtE32 *)
(* val Id width *)
(* val BoolGtE32 *)
(* val Id height *)
(* val App return *)
(* val Noop *)
(* val Id return *)
(* val Bind *)
(* val Plus32 *)
(* val Id shiftx *)
(* val Bind *)
(* val Plus32 *)
(* val Id shifty *)
(* val Bind *)
(* val Int32 *)
(* val Bind *)
(* val Float32 *)
(* val Bind *)
(* val Float32 *)
(* val Bind *)
(* val Float32 *)
(* val Bind *)
(* val Float32 *)
(* val Bind *)
(* val Float32 *)
(* val Bind *)
(* val Float32 *)
(* val Bind *)
(* val MinF32 *)
(* val MulF32 *)
(* val DivF32 *)
(* val DivF32 *)
(* val App float *)
(* val Id x0 *)
(* val Id float *)
(* val App float *)
(* val Ref *)
(* val Id float *)
(* val Id zoom *)
(* val Bind *)
(* val MinF32 *)
(* val MulF32 *)
(* val DivF32 *)
(* val DivF32 *)
(* val App float *)
(* val Id y0 *)
(* val Id float *)
(* val App float *)
(* val Ref *)
(* val Id float *)
(* val Id zoom *)
(* val Bind *)
(* val App *)
(* val Id y1LOL *)
(* val App normalize *)
(* val Id x1LOL *)
(* val Id normalize *)
(* val Seq *)
(* val While *)
(* val BoolAnd *)
(* val BoolLtEF *)
(* val BoolLt32 *)
(* val Id max_iter *)
(* val Seq *)
(* val Acc *)
(* val Plus32 *)
(* val Id cpt *)
(* val Seq *)
(* val Acc *)
(* val PlusF32 *)
(* val MinF32 *)
(* val MulF32 *)
(* val MulF32 *)
(* val Id x2 *)
(* val Seq *)
(* val Acc *)
(* val PlusF32 *)
(* val MulF32 *)
(* val MulF32 *)
(* val Id y2 *)
(* val Seq *)
(* val Acc *)
(* val Id x2 *)
(* val Id x1 *)
(* val Seq *)
(* val Acc *)
(* val Id y2 *)
(* val Id y1 *)
(* val Acc *)
(* val PlusF32 *)
(* val MulF32 *)
(* val MulF32 *)
(* val Id norm *)
(* val VecSet *)
(* val Id cpt *)
type : int32
(* val Plus32 *)
(* val Mul32 *)
(* val Id width *)
(* val Id img *)
closing module Std
(* val2 b Open *)
(* val2 End *)
(* val2 Open *)
opening module Std
(* val2 Bind *)
(* val2 b Bind *)
(* val2 Plus32 *)
(* val2 Mul32 *)
(* val2 Id y *)
(* val2 Plus32 *)
(* val2 Mul32 *)
(* val2 Bind *)
(* val2 Plus32 *)
(* val2 Mul32 *)
(* val2 Id x *)
(* val2 Plus32 *)
(* val2 Mul32 *)
(* val2 Seq *)
(* val2 If *)
(* val2 App return *)
(* val2 parse_app App return *)
(* val2 parse_app_app Id return *)
(* val2 Noop *)
(* val2 BoolOr *)
(* val2 BoolGtE32 *)
(* val2 Ref *)
(* val2 Id x *)
(* val2 BoolGtE32 *)
(* val2 Ref *)
(* val2 Id y *)
(* val2 Bind *)
(* val2 Plus32 *)
(* val2 Id x0 *)
(* val2 Plus32 *)
(* val2 Bind *)
(* val2 Plus32 *)
(* val2 Id y0 *)
(* val2 Plus32 *)
(* val2 Bind *)
(* val2 Int32 *)
(* val2 Id cpt *)
(* val2 Int32 *)
(* val2 Bind *)
(* val2 Float32 *)
(* val2 Id x1LOL *)
(* val2 Float32 *)
(* val2 Bind *)
(* val2 Float32 *)
(* val2 Id y1LOL *)
(* val2 Float32 *)
(* val2 Bind *)
(* val2 Float32 *)
(* val2 Id x1 *)
(* val2 Float32 *)
(* val2 Bind *)
(* val2 Float32 *)
(* val2 Id y1 *)
(* val2 Float32 *)
(* val2 Bind *)
(* val2 Float32 *)
(* val2 Id x2 *)
(* val2 Float32 *)
(* val2 Bind *)
(* val2 Float32 *)
(* val2 Id y2 *)
(* val2 Float32 *)
(* val2 Bind *)
(* val2 MinF32 *)
(* val2 MulF32 *)
(* val2 DivF32 *)
(* val2 DivF32 *)
(* val2 App float *)
(* val2 parse_app App float *)
(* val2 parse_app_app Id float *)
(* val2 Ref *)
(* val2 App float *)
(* val2 parse_app App float *)
(* val2 parse_app_app Id float *)
(* val2 Id x0 *)
(* val2 Id a *)
(* val2 MinF32 *)
(* val2 MulF32 *)
(* val2 DivF32 *)
(* val2 DivF32 *)
(* val2 App float *)
(* val2 parse_app App float *)
(* val2 parse_app_app Id float *)
(* val2 Ref *)
(* val2 App float *)
(* val2 parse_app App float *)
(* val2 parse_app_app Id float *)
(* val2 Id x0 *)
(* val2 Bind *)
(* val2 MinF32 *)
(* val2 MulF32 *)
(* val2 DivF32 *)
(* val2 DivF32 *)
(* val2 App float *)
(* val2 parse_app App float *)
(* val2 parse_app_app Id float *)
(* val2 Ref *)
(* val2 App float *)
(* val2 parse_app App float *)
(* val2 parse_app_app Id float *)
(* val2 Id y0 *)
(* val2 Id b *)
(* val2 MinF32 *)
(* val2 MulF32 *)
(* val2 DivF32 *)
(* val2 DivF32 *)
(* val2 App float *)
(* val2 parse_app App float *)
(* val2 parse_app_app Id float *)
(* val2 Ref *)
(* val2 App float *)
(* val2 parse_app App float *)
(* val2 parse_app_app Id float *)
(* val2 Id y0 *)
(* val2 Bind *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App normalize *)
(* val2 parse_app_app Id normalize *)
(* val2 Id x1LOL *)
(* val2 Id y1LOL *)
(* val2 Id norm *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App normalize *)
(* val2 parse_app_app Id normalize *)
(* val2 Id x1LOL *)
(* val2 Id y1LOL *)
(* val2 Seq *)
(* val2 While *)
(* val2 BoolAnd *)
(* val2 BoolLtEF *)
(* val2 Float32 *)
(* val2 Id norm *)
(* val2 BoolLt32 *)
(* val2 Seq *)
(* val2 Acc *)
(* val2 Id cpt *)
(* val2 Plus32 *)
(* val2 Seq *)
(* val2 Acc *)
(* val2 Id x2 *)
(* val2 PlusF32 *)
(* val2 MinF32 *)
(* val2 MulF32 *)
(* val2 MulF32 *)
(* val2 Seq *)
(* val2 Acc *)
(* val2 Id y2 *)
(* val2 PlusF32 *)
(* val2 MulF32 *)
(* val2 MulF32 *)
(* val2 Seq *)
(* val2 Acc *)
(* val2 Id x1 *)
(* val2 Id x2 *)
(* val2 Seq *)
(* val2 Acc *)
(* val2 Id y1 *)
(* val2 Id y2 *)
(* val2 Acc *)
(* val2 Id norm *)
(* val2 PlusF32 *)
(* val2 MulF32 *)
(* val2 MulF32 *)
(* val2 VecSet *)
(* val2 Id cpt *)
(* val2 VecGet *)
(* val2 Plus32 *)
(* val2 Mul32 *)
(* val2 Id img *)
closing module Std
adding y
adding x
adding x0
adding y0
adding cpt
adding x1
adding y1
adding x2
adding y2
adding a
adding b
adding normalize
adding pow2
(* MulF32 ############# typ unknown -> unknown *)
(* Id x__ ############# typ float32 *)
x__ of type float32
(* Id x__ ############# typ float32 *)
x__ of type float32

Unknown : 0 


(* MulF32 ############# typ unknown -> unknown *)
(* Id x__ ############# typ float32 *)
x__ of type float32
(* Id x__ ############# typ float32 *)
x__ of type float32

Unknown : 0 


fun_type : float32
(* val MulF32 *)
(* val2 b MulF32 *)
(* val2 End *)
(* val2 MulF32 *)
/....... float32 -> float32
(* Bind ############# typ unknown -> unknown *)
ADDDD: pow2
%!(* PlusF32 ############# typ unknown -> unknown *)
(* App pow2 ############# typ float32 *)
(* typ Id x_ +++-> unknown *)
(* Id x_ ############# typ float32 *)
x_ of type float32
(* >>>>>>>>>>>> typ float32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* App pow2 ############# typ float32 *)
(* typ Id y_ +++-> unknown *)
(* Id y_ ############# typ float32 *)
y_ of type float32
(* >>>>>>>>>>>> typ float32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)

Unknown : 0 


(* Bind ############# typ unknown -> unknown *)
ADDDD: pow2
%!(* PlusF32 ############# typ unknown -> unknown *)
(* App pow2 ############# typ float32 *)
(* typ Id x_ +++-> float32 *)
(* Id x_ ############# typ float32 *)
x_ of type float32
(* >>>>>>>>>>>> typ float32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* App pow2 ############# typ float32 *)
(* typ Id y_ +++-> float32 *)
(* Id y_ ############# typ float32 *)
y_ of type float32
(* >>>>>>>>>>>> typ float32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)

Unknown : 0 


fun_type : float32
(* val Bind *)
(* val PlusF32 *)
(* val App pow2 *)
(* val Id x_ *)
(* val Id pow2 *)
(* val App pow2 *)
(* val Id y_ *)
(* val Id pow2 *)
(* val2 b Bind *)
(* val2 PlusF32 *)
(* val2 App pow2 *)
(* val2 parse_app App pow2 *)
(* val2 parse_app_app Id pow2 *)
(* val2 Id x_ *)
(* val2 App pow2 *)
(* val2 parse_app App pow2 *)
(* val2 parse_app_app Id pow2 *)
(* val2 Id y_ *)
/....... float32 -> float32 -> float32
adding norm
(* Open ############# typ unknown *)
opening module Std
(* Bind ############# typ unknown *)
(* Plus32 ############# typ unknown *)
(* Id thread_idx_y ############# typ int32 *)
(* Mul32 ############# typ int32 *)
(* Id block_idx_y ############# typ int32 *)
(* Id block_dim_y ############# typ int32 *)
AD: y
%!(* Bind ############# typ unknown *)
(* Plus32 ############# typ unknown *)
(* Id thread_idx_x ############# typ int32 *)
(* Mul32 ############# typ int32 *)
(* Id block_idx_x ############# typ int32 *)
(* Id block_dim_x ############# typ int32 *)
AD: x
%!(* Seq ############# typ unknown *)
(* If ############# typ unit *)
(* BoolOr ############# typ bool *)
(* BoolGtE32 ############# typ bool *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
UNKNOWN : Ref
(* BoolGtE32 ############# typ bool *)
(* Id x ############# typ int32 *)
x of type int32
(* Ref ############# typ int32 *)
UNKNOWN : Ref
(* BoolOr ############# typ bool *)
(* BoolGtE32 ############# typ bool *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
height of type int32
UNKNOWN : Ref
(* BoolGtE32 ############# typ bool *)
(* Id x ############# typ int32 *)
x of type int32
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* App return ############# typ unit *)
(* typ Noop +++-> unknown *)
(* Noop ############# typ unit *)
(* >>>>>>>>>>>> typ unit -> unit *)
(* <<<<<<<<<<<< typ unit *)
(* Bind ############# typ unknown *)
(* Plus32 ############# typ unknown *)
(* Id x ############# typ int32 *)
x of type int32
(* Id shiftx ############# typ int32 *)
shiftx of type int32
AD: x0
%!(* Bind ############# typ unknown *)
(* Plus32 ############# typ unknown *)
(* Id y ############# typ int32 *)
y of type int32
(* Id shifty ############# typ int32 *)
shifty of type int32
AD: y0
%!(* Bind ############# typ unknown *)
(* Int32 ############# typ unknown *)
AD: cpt
%!(* Bind ############# typ unknown *)
(* Float32 ############# typ unknown *)
AD: x1
%!(* Bind ############# typ unknown *)
(* Float32 ############# typ unknown *)
AD: y1
%!(* Bind ############# typ unknown *)
(* Float32 ############# typ unknown *)
AD: x2
%!(* Bind ############# typ unknown *)
(* Float32 ############# typ unknown *)
AD: y2
%!(* Bind ############# typ unknown *)
(* MinF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* DivF32 ############# typ float32 *)
(* DivF32 ############# typ float32 *)
(* App float ############# typ float32 *)
(* typ Id x0 +++-> unknown *)
(* Id x0 ############# typ int32 *)
x0 of type int32
(* >>>>>>>>>>>> typ int32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* App float ############# typ float32 *)
(* typ Ref +++-> unknown *)
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* >>>>>>>>>>>> typ int32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* Id zoom ############# typ float32 *)
zoom of type float32
(* Float32 ############# typ float32 *)
AD: a
%!(* Bind ############# typ unknown *)
(* MinF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* DivF32 ############# typ float32 *)
(* DivF32 ############# typ float32 *)
(* App float ############# typ float32 *)
(* typ Id y0 +++-> unknown *)
(* Id y0 ############# typ int32 *)
y0 of type int32
(* >>>>>>>>>>>> typ int32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* App float ############# typ float32 *)
(* typ Ref +++-> unknown *)
(* Ref ############# typ int32 *)
height of type int32
UNKNOWN : Ref
(* >>>>>>>>>>>> typ int32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* Id zoom ############# typ float32 *)
zoom of type float32
(* Float32 ############# typ float32 *)
AD: b
%!(* Bind ############# typ unknown *)
ADDDD: normalize
%!(* Bind ############# typ unknown *)
(* App ############# typ unknown *)
(* App normalize ############# typ unknown *)
(* typ Id x1 +++-> unknown *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* >>>>>>>>>>>> typ float32 -> float32 -> float32 *)
(* <<<<<<<<<<<< typ float32 -> float32 *)
(* typ Id y1 +++-> unknown *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* >>>>>>>>>>>> typ float32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* Seq ############# typ unknown *)
(* While ############# typ unit *)
(* BoolAnd ############# typ bool *)
(* BoolLt32 ############# typ bool *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Ref ############# typ int32 *)
UNKNOWN : Ref
(* BoolLtEF ############# typ bool *)
(* Id norm ############# typ float32 *)
norm of type float32
(* Float32 ############# typ float32 *)
(* BoolAnd ############# typ bool *)
(* BoolLt32 ############# typ bool *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Ref ############# typ int32 *)
max_iter of type int32
UNKNOWN : Ref
(* BoolLtEF ############# typ bool *)
(* Id norm ############# typ float32 *)
norm of type float32
(* Float32 ############# typ float32 *)
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Plus32 ############# typ unknown *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ unknown *)
cpt of type unknown
(* Plus32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id a ############# typ float32 *)
a of type float32
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* PlusF32 ############# typ float32 *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id a ############# typ float32 *)
a of type float32
(* Id x2 ############# typ float32 *)
x2 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id b ############# typ float32 *)
b of type float32
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* PlusF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id b ############# typ float32 *)
b of type float32
(* Id y2 ############# typ float32 *)
y2 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* Id x1 ############# typ unknown *)
x1 of type unknown
(* Id x2 ############# typ float32 *)
x2 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* Id y1 ############# typ unknown *)
y1 of type unknown
(* Id y2 ############# typ float32 *)
y2 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id norm ############# typ unknown *)
norm of type unknown
(* PlusF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id norm ############# typ float32 *)
norm of type float32
(* BoolAnd ############# typ bool *)
(* BoolLt32 ############# typ bool *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Ref ############# typ int32 *)
max_iter of type int32
UNKNOWN : Ref
(* BoolLtEF ############# typ bool *)
(* Id norm ############# typ float32 *)
norm of type float32
(* Float32 ############# typ float32 *)
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Plus32 ############# typ unknown *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ unknown *)
cpt of type unknown
(* Plus32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id a ############# typ float32 *)
a of type float32
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* PlusF32 ############# typ float32 *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id a ############# typ float32 *)
a of type float32
(* Id x2 ############# typ float32 *)
x2 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id b ############# typ float32 *)
b of type float32
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* PlusF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id b ############# typ float32 *)
b of type float32
(* Id y2 ############# typ float32 *)
y2 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* Id x1 ############# typ unknown *)
x1 of type unknown
(* Id x2 ############# typ float32 *)
x2 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* Id y1 ############# typ unknown *)
y1 of type unknown
(* Id y2 ############# typ float32 *)
y2 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id norm ############# typ unknown *)
norm of type unknown
(* PlusF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id norm ############# typ float32 *)
norm of type float32
(* VecSet ############# typ unknown *)
(* VecGet ############# typ unknown *)
(* Id img ############# typ unknown vector *)
img of type unknown vector
UNKNOWN : Id img
(* Plus32 ############# typ int32 *)
(* Mul32 ############# typ int32 *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* Id x ############# typ int32 *)
x of type int32
UNKNOWN : VecGet
(* Id cpt ############# typ unknown vector *)
cpt of type unknown vector
closing module Std
Unknown : 2 


(* Open ############# typ unknown *)
opening module Std
(* Bind ############# typ unknown *)
(* Plus32 ############# typ int32 *)
(* Id thread_idx_y ############# typ int32 *)
(* Mul32 ############# typ int32 *)
(* Id block_idx_y ############# typ int32 *)
(* Id block_dim_y ############# typ int32 *)
(* Bind ############# typ unknown *)
(* Plus32 ############# typ int32 *)
(* Id thread_idx_x ############# typ int32 *)
(* Mul32 ############# typ int32 *)
(* Id block_idx_x ############# typ int32 *)
(* Id block_dim_x ############# typ int32 *)
(* Seq ############# typ unknown *)
(* If ############# typ unit *)
(* BoolOr ############# typ bool *)
(* BoolGtE32 ############# typ bool *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
height of type int32
UNKNOWN : Ref
(* BoolGtE32 ############# typ bool *)
(* Id x ############# typ int32 *)
x of type int32
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* BoolOr ############# typ bool *)
(* BoolGtE32 ############# typ bool *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
height of type int32
UNKNOWN : Ref
(* BoolGtE32 ############# typ bool *)
(* Id x ############# typ int32 *)
x of type int32
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* App return ############# typ unit *)
(* typ Noop +++-> unit *)
(* Noop ############# typ unit *)
(* >>>>>>>>>>>> typ unit -> unit *)
(* <<<<<<<<<<<< typ unit *)
(* Bind ############# typ unknown *)
(* Plus32 ############# typ int32 *)
(* Id x ############# typ int32 *)
x of type int32
(* Id shiftx ############# typ int32 *)
shiftx of type int32
(* Bind ############# typ unknown *)
(* Plus32 ############# typ int32 *)
(* Id y ############# typ int32 *)
y of type int32
(* Id shifty ############# typ int32 *)
shifty of type int32
(* Bind ############# typ unknown *)
(* Int32 ############# typ int32 *)
(* Bind ############# typ unknown *)
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* DivF32 ############# typ float32 *)
(* DivF32 ############# typ float32 *)
(* App float ############# typ float32 *)
(* typ Id x0 +++-> int32 *)
(* Id x0 ############# typ int32 *)
x0 of type int32
(* >>>>>>>>>>>> typ int32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* App float ############# typ float32 *)
(* typ Ref +++-> unknown *)
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* >>>>>>>>>>>> typ int32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* Id zoom ############# typ float32 *)
zoom of type float32
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* DivF32 ############# typ float32 *)
(* DivF32 ############# typ float32 *)
(* App float ############# typ float32 *)
(* typ Id y0 +++-> int32 *)
(* Id y0 ############# typ int32 *)
y0 of type int32
(* >>>>>>>>>>>> typ int32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* App float ############# typ float32 *)
(* typ Ref +++-> unknown *)
(* Ref ############# typ int32 *)
height of type int32
UNKNOWN : Ref
(* >>>>>>>>>>>> typ int32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* Id zoom ############# typ float32 *)
zoom of type float32
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
ADDDD: normalize
%!(* Bind ############# typ unknown *)
(* App ############# typ float32 *)
(* App normalize ############# typ float32 *)
(* typ Id x1 +++-> float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* >>>>>>>>>>>> typ float32 -> float32 -> float32 *)
(* <<<<<<<<<<<< typ float32 -> float32 *)
(* typ Id y1 +++-> float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* >>>>>>>>>>>> typ float32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* Seq ############# typ unknown *)
(* While ############# typ unit *)
(* BoolAnd ############# typ bool *)
(* BoolLt32 ############# typ bool *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Ref ############# typ int32 *)
max_iter of type int32
UNKNOWN : Ref
(* BoolLtEF ############# typ bool *)
(* Id norm ############# typ float32 *)
norm of type float32
(* Float32 ############# typ float32 *)
(* BoolAnd ############# typ bool *)
(* BoolLt32 ############# typ bool *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Ref ############# typ int32 *)
max_iter of type int32
UNKNOWN : Ref
(* BoolLtEF ############# typ bool *)
(* Id norm ############# typ float32 *)
norm of type float32
(* Float32 ############# typ float32 *)
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Plus32 ############# typ unknown *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ unknown *)
cpt of type unknown
(* Plus32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id a ############# typ float32 *)
a of type float32
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* PlusF32 ############# typ float32 *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id a ############# typ float32 *)
a of type float32
(* Id x2 ############# typ float32 *)
x2 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id b ############# typ float32 *)
b of type float32
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* PlusF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id b ############# typ float32 *)
b of type float32
(* Id y2 ############# typ float32 *)
y2 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* Id x1 ############# typ unknown *)
x1 of type unknown
(* Id x2 ############# typ float32 *)
x2 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* Id y1 ############# typ unknown *)
y1 of type unknown
(* Id y2 ############# typ float32 *)
y2 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id norm ############# typ unknown *)
norm of type unknown
(* PlusF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id norm ############# typ float32 *)
norm of type float32
(* BoolAnd ############# typ bool *)
(* BoolLt32 ############# typ bool *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Ref ############# typ int32 *)
max_iter of type int32
UNKNOWN : Ref
(* BoolLtEF ############# typ bool *)
(* Id norm ############# typ float32 *)
norm of type float32
(* Float32 ############# typ float32 *)
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Plus32 ############# typ unknown *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ unknown *)
cpt of type unknown
(* Plus32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id a ############# typ float32 *)
a of type float32
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* PlusF32 ############# typ float32 *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id a ############# typ float32 *)
a of type float32
(* Id x2 ############# typ float32 *)
x2 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id b ############# typ float32 *)
b of type float32
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* PlusF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id b ############# typ float32 *)
b of type float32
(* Id y2 ############# typ float32 *)
y2 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* Id x1 ############# typ unknown *)
x1 of type unknown
(* Id x2 ############# typ float32 *)
x2 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* Id y1 ############# typ unknown *)
y1 of type unknown
(* Id y2 ############# typ float32 *)
y2 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id norm ############# typ unknown *)
norm of type unknown
(* PlusF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id norm ############# typ float32 *)
norm of type float32
(* VecSet ############# typ unknown *)
(* VecGet ############# typ int32 *)
(* Id img ############# typ int32 vector *)
img of type int32 vector
(* Plus32 ############# typ int32 *)
(* Mul32 ############# typ int32 *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* Id x ############# typ int32 *)
x of type int32
(* Id cpt ############# typ int32 *)
cpt of type int32
closing module Std
Unknown : 0 


(* Open ############# typ unknown *)
opening module Std
(* Bind ############# typ unknown *)
(* Plus32 ############# typ int32 *)
(* Id thread_idx_y ############# typ int32 *)
(* Mul32 ############# typ int32 *)
(* Id block_idx_y ############# typ int32 *)
(* Id block_dim_y ############# typ int32 *)
(* Bind ############# typ unknown *)
(* Plus32 ############# typ int32 *)
(* Id thread_idx_x ############# typ int32 *)
(* Mul32 ############# typ int32 *)
(* Id block_idx_x ############# typ int32 *)
(* Id block_dim_x ############# typ int32 *)
(* Seq ############# typ unknown *)
(* If ############# typ unit *)
(* BoolOr ############# typ bool *)
(* BoolGtE32 ############# typ bool *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
height of type int32
UNKNOWN : Ref
(* BoolGtE32 ############# typ bool *)
(* Id x ############# typ int32 *)
x of type int32
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* BoolOr ############# typ bool *)
(* BoolGtE32 ############# typ bool *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
height of type int32
UNKNOWN : Ref
(* BoolGtE32 ############# typ bool *)
(* Id x ############# typ int32 *)
x of type int32
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* App return ############# typ unit *)
(* typ Noop +++-> unit *)
(* Noop ############# typ unit *)
(* >>>>>>>>>>>> typ unit -> unit *)
(* <<<<<<<<<<<< typ unit *)
(* Bind ############# typ unknown *)
(* Plus32 ############# typ int32 *)
(* Id x ############# typ int32 *)
x of type int32
(* Id shiftx ############# typ int32 *)
shiftx of type int32
(* Bind ############# typ unknown *)
(* Plus32 ############# typ int32 *)
(* Id y ############# typ int32 *)
y of type int32
(* Id shifty ############# typ int32 *)
shifty of type int32
(* Bind ############# typ unknown *)
(* Int32 ############# typ int32 *)
(* Bind ############# typ unknown *)
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* DivF32 ############# typ float32 *)
(* DivF32 ############# typ float32 *)
(* App float ############# typ float32 *)
(* typ Id x0 +++-> int32 *)
(* Id x0 ############# typ int32 *)
x0 of type int32
(* >>>>>>>>>>>> typ int32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* App float ############# typ float32 *)
(* typ Ref +++-> unknown *)
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* >>>>>>>>>>>> typ int32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* Id zoom ############# typ float32 *)
zoom of type float32
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* DivF32 ############# typ float32 *)
(* DivF32 ############# typ float32 *)
(* App float ############# typ float32 *)
(* typ Id y0 +++-> int32 *)
(* Id y0 ############# typ int32 *)
y0 of type int32
(* >>>>>>>>>>>> typ int32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* App float ############# typ float32 *)
(* typ Ref +++-> unknown *)
(* Ref ############# typ int32 *)
height of type int32
UNKNOWN : Ref
(* >>>>>>>>>>>> typ int32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* Id zoom ############# typ float32 *)
zoom of type float32
(* Float32 ############# typ float32 *)
(* Bind ############# typ unknown *)
ADDDD: normalize
%!(* Bind ############# typ unknown *)
(* App ############# typ float32 *)
(* App normalize ############# typ float32 *)
(* typ Id x1 +++-> float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* >>>>>>>>>>>> typ float32 -> float32 -> float32 *)
(* <<<<<<<<<<<< typ float32 -> float32 *)
(* typ Id y1 +++-> float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* >>>>>>>>>>>> typ float32 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* Seq ############# typ unknown *)
(* While ############# typ unit *)
(* BoolAnd ############# typ bool *)
(* BoolLt32 ############# typ bool *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Ref ############# typ int32 *)
max_iter of type int32
UNKNOWN : Ref
(* BoolLtEF ############# typ bool *)
(* Id norm ############# typ float32 *)
norm of type float32
(* Float32 ############# typ float32 *)
(* BoolAnd ############# typ bool *)
(* BoolLt32 ############# typ bool *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Ref ############# typ int32 *)
max_iter of type int32
UNKNOWN : Ref
(* BoolLtEF ############# typ bool *)
(* Id norm ############# typ float32 *)
norm of type float32
(* Float32 ############# typ float32 *)
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Plus32 ############# typ unknown *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ unknown *)
cpt of type unknown
(* Plus32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id a ############# typ float32 *)
a of type float32
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* PlusF32 ############# typ float32 *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id a ############# typ float32 *)
a of type float32
(* Id x2 ############# typ float32 *)
x2 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id b ############# typ float32 *)
b of type float32
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* PlusF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id b ############# typ float32 *)
b of type float32
(* Id y2 ############# typ float32 *)
y2 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* Id x1 ############# typ unknown *)
x1 of type unknown
(* Id x2 ############# typ float32 *)
x2 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* Id y1 ############# typ unknown *)
y1 of type unknown
(* Id y2 ############# typ float32 *)
y2 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id norm ############# typ unknown *)
norm of type unknown
(* PlusF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id norm ############# typ float32 *)
norm of type float32
(* BoolAnd ############# typ bool *)
(* BoolLt32 ############# typ bool *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Ref ############# typ int32 *)
max_iter of type int32
UNKNOWN : Ref
(* BoolLtEF ############# typ bool *)
(* Id norm ############# typ float32 *)
norm of type float32
(* Float32 ############# typ float32 *)
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Plus32 ############# typ unknown *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ unknown *)
cpt of type unknown
(* Plus32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id a ############# typ float32 *)
a of type float32
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* PlusF32 ############# typ float32 *)
(* MinF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id a ############# typ float32 *)
a of type float32
(* Id x2 ############# typ float32 *)
x2 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id b ############# typ float32 *)
b of type float32
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* PlusF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Float32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id b ############# typ float32 *)
b of type float32
(* Id y2 ############# typ float32 *)
y2 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* Id x1 ############# typ unknown *)
x1 of type unknown
(* Id x2 ############# typ float32 *)
x2 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* Id y1 ############# typ unknown *)
y1 of type unknown
(* Id y2 ############# typ float32 *)
y2 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Acc ############# typ unit *)
(* PlusF32 ############# typ unknown *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id norm ############# typ unknown *)
norm of type unknown
(* PlusF32 ############# typ float32 *)
(* MulF32 ############# typ float32 *)
(* Id x1 ############# typ float32 *)
x1 of type float32
(* Id x1 ############# typ float32 *)
x1 of type float32
(* MulF32 ############# typ float32 *)
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id y1 ############# typ float32 *)
y1 of type float32
(* Id norm ############# typ float32 *)
norm of type float32
(* VecSet ############# typ unknown *)
(* VecGet ############# typ int32 *)
(* Id img ############# typ int32 vector *)
img of type int32 vector
(* Plus32 ############# typ int32 *)
(* Mul32 ############# typ int32 *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* Id x ############# typ int32 *)
x of type int32
(* Id cpt ############# typ int32 *)
cpt of type int32
closing module Std
Unknown : 0 


(* val Open *)
opening module Std
(* val Bind *)
(* val Plus32 *)
(* val Mul32 *)
(* val Bind *)
(* val Plus32 *)
(* val Mul32 *)
(* val Seq *)
(* val If *)
(* val BoolOr *)
(* val BoolGtE32 *)
(* val Id width *)
(* val BoolGtE32 *)
(* val Id height *)
(* val App return *)
(* val Noop *)
(* val Id return *)
(* val Bind *)
(* val Plus32 *)
(* val Bind *)
(* val Plus32 *)
(* val Bind *)
(* val Int32 *)
(* val Bind *)
(* val Float32 *)
(* val Bind *)
(* val Float32 *)
(* val Bind *)
(* val Float32 *)
(* val Bind *)
(* val Float32 *)
(* val Bind *)
(* val MinF32 *)
(* val MulF32 *)
(* val DivF32 *)
(* val DivF32 *)
(* val App float *)
(* val Id x0 *)
(* val Id float *)
(* val App float *)
(* val Ref *)
(* val Id float *)
(* val Bind *)
(* val MinF32 *)
(* val MulF32 *)
(* val DivF32 *)
(* val DivF32 *)
(* val App float *)
(* val Id y0 *)
(* val Id float *)
(* val App float *)
(* val Ref *)
(* val Id float *)
(* val Bind *)
(* val Bind *)
(* val App *)
(* val Id y1 *)
(* val App normalize *)
(* val Id x1 *)
(* val Id normalize *)
(* val Seq *)
(* val While *)
(* val BoolAnd *)
(* val BoolLtEF *)
(* val BoolLt32 *)
(* val Id max_iter *)
(* val Seq *)
(* val Acc *)
(* val Plus32 *)
(* val Id cpt *)
(* val Seq *)
(* val Acc *)
(* val PlusF32 *)
(* val MinF32 *)
(* val MulF32 *)
(* val MulF32 *)
(* val Id x2 *)
(* val Seq *)
(* val Acc *)
(* val PlusF32 *)
(* val MulF32 *)
(* val MulF32 *)
(* val Id y2 *)
(* val Seq *)
(* val Acc *)
(* val Id x2 *)
(* val Id x1 *)
(* val Seq *)
(* val Acc *)
(* val Id y2 *)
(* val Id y1 *)
(* val Acc *)
(* val PlusF32 *)
(* val MulF32 *)
(* val MulF32 *)
(* val Id norm *)
(* val VecSet *)
(* val Id cpt *)
type : int32
(* val Plus32 *)
(* val Mul32 *)
(* val Id width *)
(* val Id img *)
closing module Std
(* val2 b Open *)
(* val2 End *)
(* val2 Open *)
opening module Std
(* val2 Bind *)
(* val2 Plus32 *)
(* val2 Mul32 *)
(* val2 Id y *)
(* val2 Plus32 *)
(* val2 Mul32 *)
(* val2 Bind *)
(* val2 Plus32 *)
(* val2 Mul32 *)
(* val2 Id x *)
(* val2 Plus32 *)
(* val2 Mul32 *)
(* val2 Seq *)
(* val2 If *)
(* val2 App return *)
(* val2 parse_app App return *)
(* val2 parse_app_app Id return *)
(* val2 Noop *)
(* val2 BoolOr *)
(* val2 BoolGtE32 *)
(* val2 Ref *)
(* val2 Id x *)
(* val2 BoolGtE32 *)
(* val2 Ref *)
(* val2 Id y *)
(* val2 Bind *)
(* val2 Plus32 *)
(* val2 Id x0 *)
(* val2 Plus32 *)
(* val2 Bind *)
(* val2 Plus32 *)
(* val2 Id y0 *)
(* val2 Plus32 *)
(* val2 Bind *)
(* val2 Int32 *)
(* val2 Id cpt *)
(* val2 Int32 *)
(* val2 Bind *)
(* val2 Float32 *)
(* val2 Id x1 *)
(* val2 Float32 *)
(* val2 Bind *)
(* val2 Float32 *)
(* val2 Id y1 *)
(* val2 Float32 *)
(* val2 Bind *)
(* val2 Float32 *)
(* val2 Id x2 *)
(* val2 Float32 *)
(* val2 Bind *)
(* val2 Float32 *)
(* val2 Id y2 *)
(* val2 Float32 *)
(* val2 Bind *)
(* val2 MinF32 *)
(* val2 MulF32 *)
(* val2 DivF32 *)
(* val2 DivF32 *)
(* val2 App float *)
(* val2 parse_app App float *)
(* val2 parse_app_app Id float *)
(* val2 Ref *)
(* val2 App float *)
(* val2 parse_app App float *)
(* val2 parse_app_app Id float *)
(* val2 Id x0 *)
(* val2 Id a *)
(* val2 MinF32 *)
(* val2 MulF32 *)
(* val2 DivF32 *)
(* val2 DivF32 *)
(* val2 App float *)
(* val2 parse_app App float *)
(* val2 parse_app_app Id float *)
(* val2 Ref *)
(* val2 App float *)
(* val2 parse_app App float *)
(* val2 parse_app_app Id float *)
(* val2 Id x0 *)
(* val2 Bind *)
(* val2 MinF32 *)
(* val2 MulF32 *)
(* val2 DivF32 *)
(* val2 DivF32 *)
(* val2 App float *)
(* val2 parse_app App float *)
(* val2 parse_app_app Id float *)
(* val2 Ref *)
(* val2 App float *)
(* val2 parse_app App float *)
(* val2 parse_app_app Id float *)
(* val2 Id y0 *)
(* val2 Id b *)
(* val2 MinF32 *)
(* val2 MulF32 *)
(* val2 DivF32 *)
(* val2 DivF32 *)
(* val2 App float *)
(* val2 parse_app App float *)
(* val2 parse_app_app Id float *)
(* val2 Ref *)
(* val2 App float *)
(* val2 parse_app App float *)
(* val2 parse_app_app Id float *)
(* val2 Id y0 *)
(* val2 Bind *)
(* val2 b Bind *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App normalize *)
(* val2 parse_app_app Id normalize *)
(* val2 Id x1 *)
(* val2 Id y1 *)
(* val2 Id norm *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App normalize *)
(* val2 parse_app_app Id normalize *)
(* val2 Id x1 *)
(* val2 Id y1 *)
(* val2 Seq *)
(* val2 While *)
(* val2 BoolAnd *)
(* val2 BoolLtEF *)
(* val2 Float32 *)
(* val2 Id norm *)
(* val2 BoolLt32 *)
(* val2 Seq *)
(* val2 Acc *)
(* val2 Id cpt *)
(* val2 Plus32 *)
(* val2 Seq *)
(* val2 Acc *)
(* val2 Id x2 *)
(* val2 PlusF32 *)
(* val2 MinF32 *)
(* val2 MulF32 *)
(* val2 MulF32 *)
(* val2 Seq *)
(* val2 Acc *)
(* val2 Id y2 *)
(* val2 PlusF32 *)
(* val2 MulF32 *)
(* val2 MulF32 *)
(* val2 Seq *)
(* val2 Acc *)
(* val2 Id x1 *)
(* val2 Id x2 *)
(* val2 Seq *)
(* val2 Acc *)
(* val2 Id y1 *)
(* val2 Id y2 *)
(* val2 Acc *)
(* val2 Id norm *)
(* val2 PlusF32 *)
(* val2 MulF32 *)
(* val2 MulF32 *)
(* val2 VecSet *)
(* val2 Id cpt *)
(* val2 VecGet *)
(* val2 Plus32 *)
(* val2 Mul32 *)
(* val2 Id img *)
closing module Std
adding normalize
(* PlusF32 ############# typ unknown -> unknown *)
(* MulF32 ############# typ float32 *)
(* Id x_ ############# typ float32 *)
x_ of type float32
(* Id x_ ############# typ float32 *)
x_ of type float32
(* MulF32 ############# typ float32 *)
(* Id y_ ############# typ float32 *)
y_ of type float32
(* Id y_ ############# typ float32 *)
y_ of type float32

Unknown : 0 


(* PlusF32 ############# typ unknown -> unknown *)
(* MulF32 ############# typ float32 *)
(* Id x_ ############# typ float32 *)
x_ of type float32
(* Id x_ ############# typ float32 *)
x_ of type float32
(* MulF32 ############# typ float32 *)
(* Id y_ ############# typ float32 *)
y_ of type float32
(* Id y_ ############# typ float32 *)
y_ of type float32

Unknown : 0 


fun_type : float32
(* val PlusF32 *)
(* val MulF32 *)
(* val MulF32 *)
(* val2 b PlusF32 *)
(* val2 End *)
(* val2 PlusF32 *)
(* val2 MulF32 *)
(* val2 MulF32 *)
/....... float32 -> float32 -> float32
adding y
adding x
adding x0
adding y0
adding cpt
adding x1
adding y1
adding x2
adding y2
adding a
adding b
adding norm
(* Open ############# typ unknown *)
opening module Std
(* Bind ############# typ unknown *)
ADDDD: normalize
%!(* Open ############# typ unknown *)
opening module Math
opening module Float64
[32m Warning [00m : kernel uses[34m double precision floating point [00mextension, make sure your device is compatible
(* Bind ############# typ unknown *)
(* Plus32 ############# typ unknown *)
(* Id thread_idx_y ############# typ int32 *)
(* Mul32 ############# typ int32 *)
(* Id block_idx_y ############# typ int32 *)
(* Id block_dim_y ############# typ int32 *)
(* Bind ############# typ unknown *)
(* Plus32 ############# typ unknown *)
(* Id thread_idx_x ############# typ int32 *)
(* Mul32 ############# typ int32 *)
(* Id block_idx_x ############# typ int32 *)
(* Id block_dim_x ############# typ int32 *)
(* Seq ############# typ unknown *)
(* If ############# typ unit *)
(* BoolOr ############# typ bool *)
(* BoolGtE32 ############# typ bool *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
UNKNOWN : Ref
(* BoolGtE32 ############# typ bool *)
(* Id x ############# typ int32 *)
x of type int32
(* Ref ############# typ int32 *)
UNKNOWN : Ref
(* BoolOr ############# typ bool *)
(* BoolGtE32 ############# typ bool *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
height of type int32
UNKNOWN : Ref
(* BoolGtE32 ############# typ bool *)
(* Id x ############# typ int32 *)
x of type int32
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* App return ############# typ unit *)
(* typ Noop +++-> unknown *)
(* Noop ############# typ unit *)
(* >>>>>>>>>>>> typ unit -> unit *)
(* <<<<<<<<<<<< typ unit *)
(* Bind ############# typ unknown *)
(* Plus32 ############# typ unknown *)
(* Id x ############# typ int32 *)
x of type int32
(* Id shiftx ############# typ int32 *)
shiftx of type int32
(* Bind ############# typ unknown *)
(* Plus32 ############# typ unknown *)
(* Id y ############# typ int32 *)
y of type int32
(* Id shifty ############# typ int32 *)
shifty of type int32
(* Bind ############# typ unknown *)
(* Int32 ############# typ unknown *)
(* Bind ############# typ unknown *)
(* Id zero ############# typ unknown *)
(* Bind ############# typ unknown *)
(* Id zero ############# typ unknown *)
(* Bind ############# typ unknown *)
(* Id zero ############# typ unknown *)
(* Bind ############# typ unknown *)
(* Id zero ############# typ unknown *)
(* Bind ############# typ unknown *)
(* App ############# typ unknown *)
(* App minus ############# typ unknown *)
(* App ############# typ float64 *)
(* App div ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* App of_float32 ############# typ float64 *)
(* typ Float32 +++-> float32 *)
(* Float32 ############# typ float32 *)
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> unknown *)
(* App ############# typ float64 *)
(* App div ############# typ float64 *)
(* App float64 ############# typ float64 *)
(* typ Id x0 +++-> unknown *)
(* Id x0 ############# typ int32 *)
x0 of type int32
(* >>>>>>>>>>>> typ int32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App float64 +++-> unknown *)
(* App float64 ############# typ float64 *)
(* typ Ref +++-> unknown *)
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* >>>>>>>>>>>> typ int32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App of_float32 +++-> unknown *)
(* App of_float32 ############# typ float64 *)
(* typ Id zoom +++-> unknown *)
(* Id zoom ############# typ float32 *)
zoom of type float32
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App of_float32 +++-> unknown *)
(* App of_float32 ############# typ float64 *)
(* typ Float32 +++-> float32 *)
(* Float32 ############# typ float32 *)
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Bind ############# typ unknown *)
(* App ############# typ unknown *)
(* App minus ############# typ unknown *)
(* App ############# typ float64 *)
(* App div ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* App of_float32 ############# typ float64 *)
(* typ Float32 +++-> float32 *)
(* Float32 ############# typ float32 *)
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> unknown *)
(* App ############# typ float64 *)
(* App div ############# typ float64 *)
(* App float64 ############# typ float64 *)
(* typ Id y0 +++-> unknown *)
(* Id y0 ############# typ int32 *)
y0 of type int32
(* >>>>>>>>>>>> typ int32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App float64 +++-> unknown *)
(* App float64 ############# typ float64 *)
(* typ Ref +++-> unknown *)
(* Ref ############# typ int32 *)
height of type int32
UNKNOWN : Ref
(* >>>>>>>>>>>> typ int32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App of_float32 +++-> unknown *)
(* App of_float32 ############# typ float64 *)
(* typ Id zoom +++-> unknown *)
(* Id zoom ############# typ float32 *)
zoom of type float32
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App of_float32 +++-> unknown *)
(* App of_float32 ############# typ float64 *)
(* typ Float32 +++-> float32 *)
(* Float32 ############# typ float32 *)
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Bind ############# typ unknown *)
(* App ############# typ unknown *)
(* App add ############# typ unknown *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id x1 +++-> unknown *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> unknown *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> unknown *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Seq ############# typ unknown *)
(* While ############# typ unit *)
(* BoolAnd ############# typ bool *)
(* BoolLt32 ############# typ bool *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Ref ############# typ int32 *)
UNKNOWN : Ref
(* BoolLtEF ############# typ bool *)
(* App to_float32 ############# typ float32 *)
(* typ Id norm +++-> unknown *)
(* Id norm ############# typ float64 *)
norm of type float64
(* >>>>>>>>>>>> typ float64 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* Float32 ############# typ float32 *)
(* BoolAnd ############# typ bool *)
(* BoolLt32 ############# typ bool *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Ref ############# typ int32 *)
max_iter of type int32
UNKNOWN : Ref
(* BoolLtEF ############# typ bool *)
(* App to_float32 ############# typ float32 *)
(* typ Id norm +++-> float64 *)
(* Id norm ############# typ float64 *)
norm of type float64
(* >>>>>>>>>>>> typ float64 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* Float32 ############# typ float32 *)
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Plus32 ############# typ unknown *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ unknown *)
cpt of type unknown
(* Plus32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* App ############# typ unknown *)
(* App add ############# typ unknown *)
(* App ############# typ float64 *)
(* App minus ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id x1 +++-> unknown *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> unknown *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> unknown *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id a +++-> unknown *)
(* Id a ############# typ float64 *)
a of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id x2 ############# typ unknown *)
x2 of type unknown
UNKNOWN : Id x2
(* App ############# typ unknown *)
(* App add ############# typ unknown *)
(* App ############# typ float64 *)
(* App minus ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id x1 +++-> float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id a +++-> float64 *)
(* Id a ############# typ float64 *)
a of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id x2 ############# typ float64 *)
x2 of type float64
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* App ############# typ unknown *)
(* App add ############# typ unknown *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* App of_float32 ############# typ float64 *)
(* typ Float32 +++-> float32 *)
(* Float32 ############# typ float32 *)
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> unknown *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> unknown *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id b +++-> unknown *)
(* Id b ############# typ float64 *)
b of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id y2 ############# typ unknown *)
y2 of type unknown
UNKNOWN : Id y2
(* App ############# typ unknown *)
(* App add ############# typ unknown *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* App of_float32 ############# typ float64 *)
(* typ Float32 +++-> float32 *)
(* Float32 ############# typ float32 *)
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id b +++-> float64 *)
(* Id b ############# typ float64 *)
b of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id y2 ############# typ float64 *)
y2 of type float64
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* Id x1 ############# typ unknown *)
x1 of type unknown
(* Id x2 ############# typ float64 *)
x2 of type float64
(* Id x1 ############# typ float64 *)
x1 of type float64
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* Id y1 ############# typ unknown *)
y1 of type unknown
(* Id y2 ############# typ float64 *)
y2 of type float64
(* Id y1 ############# typ float64 *)
y1 of type float64
(* Acc ############# typ unit *)
(* App ############# typ unknown *)
(* App add ############# typ unknown *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id x1 +++-> unknown *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> unknown *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> unknown *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id norm ############# typ unknown *)
norm of type unknown
(* App ############# typ float64 *)
(* App add ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id x1 +++-> float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id norm ############# typ float64 *)
norm of type float64
(* BoolAnd ############# typ bool *)
(* BoolLt32 ############# typ bool *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Ref ############# typ int32 *)
max_iter of type int32
UNKNOWN : Ref
(* BoolLtEF ############# typ bool *)
(* App to_float32 ############# typ float32 *)
(* typ Id norm +++-> float64 *)
(* Id norm ############# typ float64 *)
norm of type float64
(* >>>>>>>>>>>> typ float64 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* Float32 ############# typ float32 *)
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Plus32 ############# typ unknown *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ unknown *)
cpt of type unknown
(* Plus32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* App ############# typ unknown *)
(* App add ############# typ unknown *)
(* App ############# typ float64 *)
(* App minus ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id x1 +++-> float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id a +++-> float64 *)
(* Id a ############# typ float64 *)
a of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* App ############# typ float64 *)
(* App add ############# typ float64 *)
(* App ############# typ float64 *)
(* App minus ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id x1 +++-> float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id a +++-> float64 *)
(* Id a ############# typ float64 *)
a of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id x2 ############# typ float64 *)
x2 of type float64
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* App ############# typ unknown *)
(* App add ############# typ unknown *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* App of_float32 ############# typ float64 *)
(* typ Float32 +++-> float32 *)
(* Float32 ############# typ float32 *)
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id b +++-> float64 *)
(* Id b ############# typ float64 *)
b of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* App ############# typ float64 *)
(* App add ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* App of_float32 ############# typ float64 *)
(* typ Float32 +++-> float32 *)
(* Float32 ############# typ float32 *)
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id b +++-> float64 *)
(* Id b ############# typ float64 *)
b of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id y2 ############# typ float64 *)
y2 of type float64
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* Id x1 ############# typ unknown *)
x1 of type unknown
(* Id x2 ############# typ float64 *)
x2 of type float64
(* Id x1 ############# typ float64 *)
x1 of type float64
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* Id y1 ############# typ unknown *)
y1 of type unknown
(* Id y2 ############# typ float64 *)
y2 of type float64
(* Id y1 ############# typ float64 *)
y1 of type float64
(* Acc ############# typ unit *)
(* App ############# typ unknown *)
(* App add ############# typ unknown *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id x1 +++-> float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id norm ############# typ unknown *)
norm of type unknown
(* App ############# typ float64 *)
(* App add ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id x1 +++-> float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id norm ############# typ float64 *)
norm of type float64
(* VecSet ############# typ unknown *)
(* VecGet ############# typ unknown *)
(* Id img ############# typ unknown vector *)
img of type unknown vector
UNKNOWN : Id img
(* Plus32 ############# typ int32 *)
(* Mul32 ############# typ int32 *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
height of type int32
UNKNOWN : Ref
(* Id x ############# typ int32 *)
x of type int32
UNKNOWN : VecGet
(* Id cpt ############# typ unknown vector *)
cpt of type unknown vector
closing module Math
closing module Float64
closing module Std
Unknown : 4 


(* Open ############# typ unknown *)
opening module Std
(* Bind ############# typ unknown *)
ADDDD: normalize
%!(* Open ############# typ unknown *)
opening module Math
opening module Float64
(* Bind ############# typ unknown *)
(* Plus32 ############# typ int32 *)
(* Id thread_idx_y ############# typ int32 *)
(* Mul32 ############# typ int32 *)
(* Id block_idx_y ############# typ int32 *)
(* Id block_dim_y ############# typ int32 *)
(* Bind ############# typ unknown *)
(* Plus32 ############# typ int32 *)
(* Id thread_idx_x ############# typ int32 *)
(* Mul32 ############# typ int32 *)
(* Id block_idx_x ############# typ int32 *)
(* Id block_dim_x ############# typ int32 *)
(* Seq ############# typ unknown *)
(* If ############# typ unit *)
(* BoolOr ############# typ bool *)
(* BoolGtE32 ############# typ bool *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
height of type int32
UNKNOWN : Ref
(* BoolGtE32 ############# typ bool *)
(* Id x ############# typ int32 *)
x of type int32
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* BoolOr ############# typ bool *)
(* BoolGtE32 ############# typ bool *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
height of type int32
UNKNOWN : Ref
(* BoolGtE32 ############# typ bool *)
(* Id x ############# typ int32 *)
x of type int32
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* App return ############# typ unit *)
(* typ Noop +++-> unit *)
(* Noop ############# typ unit *)
(* >>>>>>>>>>>> typ unit -> unit *)
(* <<<<<<<<<<<< typ unit *)
(* Bind ############# typ unknown *)
(* Plus32 ############# typ int32 *)
(* Id x ############# typ int32 *)
x of type int32
(* Id shiftx ############# typ int32 *)
shiftx of type int32
(* Bind ############# typ unknown *)
(* Plus32 ############# typ int32 *)
(* Id y ############# typ int32 *)
y of type int32
(* Id shifty ############# typ int32 *)
shifty of type int32
(* Bind ############# typ unknown *)
(* Int32 ############# typ int32 *)
(* Bind ############# typ unknown *)
(* Id zero ############# typ float64 *)
(* Bind ############# typ unknown *)
(* Id zero ############# typ float64 *)
(* Bind ############# typ unknown *)
(* Id zero ############# typ float64 *)
(* Bind ############# typ unknown *)
(* Id zero ############# typ float64 *)
(* Bind ############# typ unknown *)
(* App ############# typ float64 *)
(* App minus ############# typ float64 *)
(* App ############# typ float64 *)
(* App div ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* App of_float32 ############# typ float64 *)
(* typ Float32 +++-> float32 *)
(* Float32 ############# typ float32 *)
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App div ############# typ float64 *)
(* App float64 ############# typ float64 *)
(* typ Id x0 +++-> int32 *)
(* Id x0 ############# typ int32 *)
x0 of type int32
(* >>>>>>>>>>>> typ int32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App float64 +++-> float64 *)
(* App float64 ############# typ float64 *)
(* typ Ref +++-> unknown *)
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* >>>>>>>>>>>> typ int32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App of_float32 +++-> float64 *)
(* App of_float32 ############# typ float64 *)
(* typ Id zoom +++-> float32 *)
(* Id zoom ############# typ float32 *)
zoom of type float32
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App of_float32 +++-> float64 *)
(* App of_float32 ############# typ float64 *)
(* typ Float32 +++-> float32 *)
(* Float32 ############# typ float32 *)
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Bind ############# typ unknown *)
(* App ############# typ float64 *)
(* App minus ############# typ float64 *)
(* App ############# typ float64 *)
(* App div ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* App of_float32 ############# typ float64 *)
(* typ Float32 +++-> float32 *)
(* Float32 ############# typ float32 *)
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App div ############# typ float64 *)
(* App float64 ############# typ float64 *)
(* typ Id y0 +++-> int32 *)
(* Id y0 ############# typ int32 *)
y0 of type int32
(* >>>>>>>>>>>> typ int32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App float64 +++-> float64 *)
(* App float64 ############# typ float64 *)
(* typ Ref +++-> unknown *)
(* Ref ############# typ int32 *)
height of type int32
UNKNOWN : Ref
(* >>>>>>>>>>>> typ int32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App of_float32 +++-> float64 *)
(* App of_float32 ############# typ float64 *)
(* typ Id zoom +++-> float32 *)
(* Id zoom ############# typ float32 *)
zoom of type float32
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App of_float32 +++-> float64 *)
(* App of_float32 ############# typ float64 *)
(* typ Float32 +++-> float32 *)
(* Float32 ############# typ float32 *)
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Bind ############# typ unknown *)
(* App ############# typ float64 *)
(* App add ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id x1 +++-> float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Seq ############# typ unknown *)
(* While ############# typ unit *)
(* BoolAnd ############# typ bool *)
(* BoolLt32 ############# typ bool *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Ref ############# typ int32 *)
max_iter of type int32
UNKNOWN : Ref
(* BoolLtEF ############# typ bool *)
(* App to_float32 ############# typ float32 *)
(* typ Id norm +++-> float64 *)
(* Id norm ############# typ float64 *)
norm of type float64
(* >>>>>>>>>>>> typ float64 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* Float32 ############# typ float32 *)
(* BoolAnd ############# typ bool *)
(* BoolLt32 ############# typ bool *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Ref ############# typ int32 *)
max_iter of type int32
UNKNOWN : Ref
(* BoolLtEF ############# typ bool *)
(* App to_float32 ############# typ float32 *)
(* typ Id norm +++-> float64 *)
(* Id norm ############# typ float64 *)
norm of type float64
(* >>>>>>>>>>>> typ float64 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* Float32 ############# typ float32 *)
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Plus32 ############# typ unknown *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ unknown *)
cpt of type unknown
(* Plus32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* App ############# typ unknown *)
(* App add ############# typ unknown *)
(* App ############# typ float64 *)
(* App minus ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id x1 +++-> float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id a +++-> float64 *)
(* Id a ############# typ float64 *)
a of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* App ############# typ float64 *)
(* App add ############# typ float64 *)
(* App ############# typ float64 *)
(* App minus ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id x1 +++-> float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id a +++-> float64 *)
(* Id a ############# typ float64 *)
a of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id x2 ############# typ float64 *)
x2 of type float64
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* App ############# typ unknown *)
(* App add ############# typ unknown *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* App of_float32 ############# typ float64 *)
(* typ Float32 +++-> float32 *)
(* Float32 ############# typ float32 *)
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id b +++-> float64 *)
(* Id b ############# typ float64 *)
b of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* App ############# typ float64 *)
(* App add ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* App of_float32 ############# typ float64 *)
(* typ Float32 +++-> float32 *)
(* Float32 ############# typ float32 *)
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id b +++-> float64 *)
(* Id b ############# typ float64 *)
b of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id y2 ############# typ float64 *)
y2 of type float64
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* Id x1 ############# typ unknown *)
x1 of type unknown
(* Id x2 ############# typ float64 *)
x2 of type float64
(* Id x1 ############# typ float64 *)
x1 of type float64
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* Id y1 ############# typ unknown *)
y1 of type unknown
(* Id y2 ############# typ float64 *)
y2 of type float64
(* Id y1 ############# typ float64 *)
y1 of type float64
(* Acc ############# typ unit *)
(* App ############# typ unknown *)
(* App add ############# typ unknown *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id x1 +++-> float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id norm ############# typ unknown *)
norm of type unknown
(* App ############# typ float64 *)
(* App add ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id x1 +++-> float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id norm ############# typ float64 *)
norm of type float64
(* BoolAnd ############# typ bool *)
(* BoolLt32 ############# typ bool *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Ref ############# typ int32 *)
max_iter of type int32
UNKNOWN : Ref
(* BoolLtEF ############# typ bool *)
(* App to_float32 ############# typ float32 *)
(* typ Id norm +++-> float64 *)
(* Id norm ############# typ float64 *)
norm of type float64
(* >>>>>>>>>>>> typ float64 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* Float32 ############# typ float32 *)
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Plus32 ############# typ unknown *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ unknown *)
cpt of type unknown
(* Plus32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* App ############# typ unknown *)
(* App add ############# typ unknown *)
(* App ############# typ float64 *)
(* App minus ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id x1 +++-> float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id a +++-> float64 *)
(* Id a ############# typ float64 *)
a of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* App ############# typ float64 *)
(* App add ############# typ float64 *)
(* App ############# typ float64 *)
(* App minus ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id x1 +++-> float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id a +++-> float64 *)
(* Id a ############# typ float64 *)
a of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id x2 ############# typ float64 *)
x2 of type float64
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* App ############# typ unknown *)
(* App add ############# typ unknown *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* App of_float32 ############# typ float64 *)
(* typ Float32 +++-> float32 *)
(* Float32 ############# typ float32 *)
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id b +++-> float64 *)
(* Id b ############# typ float64 *)
b of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* App ############# typ float64 *)
(* App add ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* App of_float32 ############# typ float64 *)
(* typ Float32 +++-> float32 *)
(* Float32 ############# typ float32 *)
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id b +++-> float64 *)
(* Id b ############# typ float64 *)
b of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id y2 ############# typ float64 *)
y2 of type float64
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* Id x1 ############# typ unknown *)
x1 of type unknown
(* Id x2 ############# typ float64 *)
x2 of type float64
(* Id x1 ############# typ float64 *)
x1 of type float64
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* Id y1 ############# typ unknown *)
y1 of type unknown
(* Id y2 ############# typ float64 *)
y2 of type float64
(* Id y1 ############# typ float64 *)
y1 of type float64
(* Acc ############# typ unit *)
(* App ############# typ unknown *)
(* App add ############# typ unknown *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id x1 +++-> float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id norm ############# typ unknown *)
norm of type unknown
(* App ############# typ float64 *)
(* App add ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id x1 +++-> float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id norm ############# typ float64 *)
norm of type float64
(* VecSet ############# typ unknown *)
(* VecGet ############# typ int32 *)
(* Id img ############# typ int32 vector *)
img of type int32 vector
(* Plus32 ############# typ int32 *)
(* Mul32 ############# typ int32 *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
height of type int32
UNKNOWN : Ref
(* Id x ############# typ int32 *)
x of type int32
(* Id cpt ############# typ int32 *)
cpt of type int32
closing module Math
closing module Float64
closing module Std
Unknown : 0 


(* Open ############# typ unknown *)
opening module Std
(* Bind ############# typ unknown *)
ADDDD: normalize
%!(* Open ############# typ unknown *)
opening module Math
opening module Float64
(* Bind ############# typ unknown *)
(* Plus32 ############# typ int32 *)
(* Id thread_idx_y ############# typ int32 *)
(* Mul32 ############# typ int32 *)
(* Id block_idx_y ############# typ int32 *)
(* Id block_dim_y ############# typ int32 *)
(* Bind ############# typ unknown *)
(* Plus32 ############# typ int32 *)
(* Id thread_idx_x ############# typ int32 *)
(* Mul32 ############# typ int32 *)
(* Id block_idx_x ############# typ int32 *)
(* Id block_dim_x ############# typ int32 *)
(* Seq ############# typ unknown *)
(* If ############# typ unit *)
(* BoolOr ############# typ bool *)
(* BoolGtE32 ############# typ bool *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
height of type int32
UNKNOWN : Ref
(* BoolGtE32 ############# typ bool *)
(* Id x ############# typ int32 *)
x of type int32
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* BoolOr ############# typ bool *)
(* BoolGtE32 ############# typ bool *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
height of type int32
UNKNOWN : Ref
(* BoolGtE32 ############# typ bool *)
(* Id x ############# typ int32 *)
x of type int32
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* App return ############# typ unit *)
(* typ Noop +++-> unit *)
(* Noop ############# typ unit *)
(* >>>>>>>>>>>> typ unit -> unit *)
(* <<<<<<<<<<<< typ unit *)
(* Bind ############# typ unknown *)
(* Plus32 ############# typ int32 *)
(* Id x ############# typ int32 *)
x of type int32
(* Id shiftx ############# typ int32 *)
shiftx of type int32
(* Bind ############# typ unknown *)
(* Plus32 ############# typ int32 *)
(* Id y ############# typ int32 *)
y of type int32
(* Id shifty ############# typ int32 *)
shifty of type int32
(* Bind ############# typ unknown *)
(* Int32 ############# typ int32 *)
(* Bind ############# typ unknown *)
(* Id zero ############# typ float64 *)
(* Bind ############# typ unknown *)
(* Id zero ############# typ float64 *)
(* Bind ############# typ unknown *)
(* Id zero ############# typ float64 *)
(* Bind ############# typ unknown *)
(* Id zero ############# typ float64 *)
(* Bind ############# typ unknown *)
(* App ############# typ float64 *)
(* App minus ############# typ float64 *)
(* App ############# typ float64 *)
(* App div ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* App of_float32 ############# typ float64 *)
(* typ Float32 +++-> float32 *)
(* Float32 ############# typ float32 *)
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App div ############# typ float64 *)
(* App float64 ############# typ float64 *)
(* typ Id x0 +++-> int32 *)
(* Id x0 ############# typ int32 *)
x0 of type int32
(* >>>>>>>>>>>> typ int32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App float64 +++-> float64 *)
(* App float64 ############# typ float64 *)
(* typ Ref +++-> unknown *)
(* Ref ############# typ int32 *)
width of type int32
UNKNOWN : Ref
(* >>>>>>>>>>>> typ int32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App of_float32 +++-> float64 *)
(* App of_float32 ############# typ float64 *)
(* typ Id zoom +++-> float32 *)
(* Id zoom ############# typ float32 *)
zoom of type float32
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App of_float32 +++-> float64 *)
(* App of_float32 ############# typ float64 *)
(* typ Float32 +++-> float32 *)
(* Float32 ############# typ float32 *)
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Bind ############# typ unknown *)
(* App ############# typ float64 *)
(* App minus ############# typ float64 *)
(* App ############# typ float64 *)
(* App div ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* App of_float32 ############# typ float64 *)
(* typ Float32 +++-> float32 *)
(* Float32 ############# typ float32 *)
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App div ############# typ float64 *)
(* App float64 ############# typ float64 *)
(* typ Id y0 +++-> int32 *)
(* Id y0 ############# typ int32 *)
y0 of type int32
(* >>>>>>>>>>>> typ int32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App float64 +++-> float64 *)
(* App float64 ############# typ float64 *)
(* typ Ref +++-> unknown *)
(* Ref ############# typ int32 *)
height of type int32
UNKNOWN : Ref
(* >>>>>>>>>>>> typ int32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App of_float32 +++-> float64 *)
(* App of_float32 ############# typ float64 *)
(* typ Id zoom +++-> float32 *)
(* Id zoom ############# typ float32 *)
zoom of type float32
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App of_float32 +++-> float64 *)
(* App of_float32 ############# typ float64 *)
(* typ Float32 +++-> float32 *)
(* Float32 ############# typ float32 *)
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Bind ############# typ unknown *)
(* App ############# typ float64 *)
(* App add ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id x1 +++-> float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Seq ############# typ unknown *)
(* While ############# typ unit *)
(* BoolAnd ############# typ bool *)
(* BoolLt32 ############# typ bool *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Ref ############# typ int32 *)
max_iter of type int32
UNKNOWN : Ref
(* BoolLtEF ############# typ bool *)
(* App to_float32 ############# typ float32 *)
(* typ Id norm +++-> float64 *)
(* Id norm ############# typ float64 *)
norm of type float64
(* >>>>>>>>>>>> typ float64 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* Float32 ############# typ float32 *)
(* BoolAnd ############# typ bool *)
(* BoolLt32 ############# typ bool *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Ref ############# typ int32 *)
max_iter of type int32
UNKNOWN : Ref
(* BoolLtEF ############# typ bool *)
(* App to_float32 ############# typ float32 *)
(* typ Id norm +++-> float64 *)
(* Id norm ############# typ float64 *)
norm of type float64
(* >>>>>>>>>>>> typ float64 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* Float32 ############# typ float32 *)
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Plus32 ############# typ unknown *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ unknown *)
cpt of type unknown
(* Plus32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* App ############# typ unknown *)
(* App add ############# typ unknown *)
(* App ############# typ float64 *)
(* App minus ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id x1 +++-> float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id a +++-> float64 *)
(* Id a ############# typ float64 *)
a of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* App ############# typ float64 *)
(* App add ############# typ float64 *)
(* App ############# typ float64 *)
(* App minus ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id x1 +++-> float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id a +++-> float64 *)
(* Id a ############# typ float64 *)
a of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id x2 ############# typ float64 *)
x2 of type float64
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* App ############# typ unknown *)
(* App add ############# typ unknown *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* App of_float32 ############# typ float64 *)
(* typ Float32 +++-> float32 *)
(* Float32 ############# typ float32 *)
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id b +++-> float64 *)
(* Id b ############# typ float64 *)
b of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* App ############# typ float64 *)
(* App add ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* App of_float32 ############# typ float64 *)
(* typ Float32 +++-> float32 *)
(* Float32 ############# typ float32 *)
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id b +++-> float64 *)
(* Id b ############# typ float64 *)
b of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id y2 ############# typ float64 *)
y2 of type float64
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* Id x1 ############# typ unknown *)
x1 of type unknown
(* Id x2 ############# typ float64 *)
x2 of type float64
(* Id x1 ############# typ float64 *)
x1 of type float64
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* Id y1 ############# typ unknown *)
y1 of type unknown
(* Id y2 ############# typ float64 *)
y2 of type float64
(* Id y1 ############# typ float64 *)
y1 of type float64
(* Acc ############# typ unit *)
(* App ############# typ unknown *)
(* App add ############# typ unknown *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id x1 +++-> float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id norm ############# typ unknown *)
norm of type unknown
(* App ############# typ float64 *)
(* App add ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id x1 +++-> float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id norm ############# typ float64 *)
norm of type float64
(* BoolAnd ############# typ bool *)
(* BoolLt32 ############# typ bool *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Ref ############# typ int32 *)
max_iter of type int32
UNKNOWN : Ref
(* BoolLtEF ############# typ bool *)
(* App to_float32 ############# typ float32 *)
(* typ Id norm +++-> float64 *)
(* Id norm ############# typ float64 *)
norm of type float64
(* >>>>>>>>>>>> typ float64 -> float32 *)
(* <<<<<<<<<<<< typ float32 *)
(* Float32 ############# typ float32 *)
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Plus32 ############# typ unknown *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ unknown *)
cpt of type unknown
(* Plus32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Int32 ############# typ int32 *)
(* Id cpt ############# typ int32 *)
cpt of type int32
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* App ############# typ unknown *)
(* App add ############# typ unknown *)
(* App ############# typ float64 *)
(* App minus ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id x1 +++-> float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id a +++-> float64 *)
(* Id a ############# typ float64 *)
a of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* App ############# typ float64 *)
(* App add ############# typ float64 *)
(* App ############# typ float64 *)
(* App minus ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id x1 +++-> float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id a +++-> float64 *)
(* Id a ############# typ float64 *)
a of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id x2 ############# typ float64 *)
x2 of type float64
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* App ############# typ unknown *)
(* App add ############# typ unknown *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* App of_float32 ############# typ float64 *)
(* typ Float32 +++-> float32 *)
(* Float32 ############# typ float32 *)
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id b +++-> float64 *)
(* Id b ############# typ float64 *)
b of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* App ############# typ float64 *)
(* App add ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* App of_float32 ############# typ float64 *)
(* typ Float32 +++-> float32 *)
(* Float32 ############# typ float32 *)
(* >>>>>>>>>>>> typ float32 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id b +++-> float64 *)
(* Id b ############# typ float64 *)
b of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id y2 ############# typ float64 *)
y2 of type float64
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id x2 ############# typ unknown *)
x2 of type unknown
(* Id x1 ############# typ unknown *)
x1 of type unknown
(* Id x2 ############# typ float64 *)
x2 of type float64
(* Id x1 ############# typ float64 *)
x1 of type float64
(* Seq ############# typ unit *)
(* Acc ############# typ unit *)
(* Id y2 ############# typ unknown *)
y2 of type unknown
(* Id y1 ############# typ unknown *)
y1 of type unknown
(* Id y2 ############# typ float64 *)
y2 of type float64
(* Id y1 ############# typ float64 *)
y1 of type float64
(* Acc ############# typ unit *)
(* App ############# typ unknown *)
(* App add ############# typ unknown *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id x1 +++-> float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id norm ############# typ unknown *)
norm of type unknown
(* App ############# typ float64 *)
(* App add ############# typ float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id x1 +++-> float64 *)
(* Id x1 ############# typ float64 *)
x1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ App +++-> float64 *)
(* App ############# typ float64 *)
(* App mul ############# typ float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 -> float64 -> float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* typ Id y1 +++-> float64 *)
(* Id y1 ############# typ float64 *)
y1 of type float64
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* >>>>>>>>>>>> typ float64 *)
(* <<<<<<<<<<<< typ float64 *)
(* Id norm ############# typ float64 *)
norm of type float64
(* VecSet ############# typ unknown *)
(* VecGet ############# typ int32 *)
(* Id img ############# typ int32 vector *)
img of type int32 vector
(* Plus32 ############# typ int32 *)
(* Mul32 ############# typ int32 *)
(* Id y ############# typ int32 *)
y of type int32
(* Ref ############# typ int32 *)
height of type int32
UNKNOWN : Ref
(* Id x ############# typ int32 *)
x of type int32
(* Id cpt ############# typ int32 *)
cpt of type int32
closing module Math
closing module Float64
closing module Std
Unknown : 0 


(* val Open *)
opening module Std
(* val Bind *)
(* val Open *)
opening module Math
opening module Float64
(* val Bind *)
(* val Plus32 *)
(* val Mul32 *)
(* val Bind *)
(* val Plus32 *)
(* val Mul32 *)
(* val Seq *)
(* val If *)
(* val BoolOr *)
(* val BoolGtE32 *)
(* val Id width *)
(* val BoolGtE32 *)
(* val Id height *)
(* val App return *)
(* val Noop *)
(* val Id return *)
(* val Bind *)
(* val Plus32 *)
(* val Bind *)
(* val Plus32 *)
(* val Bind *)
(* val Int32 *)
(* val Bind *)
(* val Id zero *)
(* val Bind *)
(* val Id zero *)
(* val Bind *)
(* val Id zero *)
(* val Bind *)
(* val Id zero *)
(* val Bind *)
(* val App *)
(* val App of_float32 *)
(* val Float32 *)
(* val Id of_float32 *)
(* val App minus *)
(* val App *)
(* val App of_float32 *)
(* val Id zoom *)
(* val Id of_float32 *)
(* val App div *)
(* val App *)
(* val App *)
(* val App float64 *)
(* val Ref *)
(* val Id float64 *)
(* val App div *)
(* val App float64 *)
(* val Id x0 *)
(* val Id float64 *)
(* val Id div *)
(* val App mul *)
(* val App of_float32 *)
(* val Float32 *)
(* val Id of_float32 *)
(* val Id mul *)
(* val Id div *)
(* val Id minus *)
(* val Bind *)
(* val App *)
(* val App of_float32 *)
(* val Float32 *)
(* val Id of_float32 *)
(* val App minus *)
(* val App *)
(* val App of_float32 *)
(* val Id zoom *)
(* val Id of_float32 *)
(* val App div *)
(* val App *)
(* val App *)
(* val App float64 *)
(* val Ref *)
(* val Id float64 *)
(* val App div *)
(* val App float64 *)
(* val Id y0 *)
(* val Id float64 *)
(* val Id div *)
(* val App mul *)
(* val App of_float32 *)
(* val Float32 *)
(* val Id of_float32 *)
(* val Id mul *)
(* val Id div *)
(* val Id minus *)
(* val Bind *)
(* val App *)
(* val App *)
(* val Id y1 *)
(* val App mul *)
(* val Id y1 *)
(* val Id mul *)
(* val App add *)
(* val App *)
(* val Id x1 *)
(* val App mul *)
(* val Id x1 *)
(* val Id mul *)
(* val Id add *)
(* val Seq *)
(* val While *)
(* val BoolAnd *)
(* val BoolLtEF *)
(* val App to_float32 *)
(* val Id norm *)
(* val Id to_float32 *)
(* val BoolLt32 *)
(* val Id max_iter *)
(* val Seq *)
(* val Acc *)
(* val Plus32 *)
(* val Id cpt *)
(* val Seq *)
(* val Acc *)
(* val App *)
(* val Id a *)
(* val App add *)
(* val App *)
(* val App *)
(* val Id y1 *)
(* val App mul *)
(* val Id y1 *)
(* val Id mul *)
(* val App minus *)
(* val App *)
(* val Id x1 *)
(* val App mul *)
(* val Id x1 *)
(* val Id mul *)
(* val Id minus *)
(* val Id add *)
(* val Id x2 *)
(* val Seq *)
(* val Acc *)
(* val App *)
(* val Id b *)
(* val App add *)
(* val App *)
(* val App *)
(* val Id y1 *)
(* val App mul *)
(* val Id x1 *)
(* val Id mul *)
(* val App mul *)
(* val App of_float32 *)
(* val Float32 *)
(* val Id of_float32 *)
(* val Id mul *)
(* val Id add *)
(* val Id y2 *)
(* val Seq *)
(* val Acc *)
(* val Id x2 *)
(* val Id x1 *)
(* val Seq *)
(* val Acc *)
(* val Id y2 *)
(* val Id y1 *)
(* val Acc *)
(* val App *)
(* val App *)
(* val Id y1 *)
(* val App mul *)
(* val Id y1 *)
(* val Id mul *)
(* val App add *)
(* val App *)
(* val Id x1 *)
(* val App mul *)
(* val Id x1 *)
(* val Id mul *)
(* val Id add *)
(* val Id norm *)
(* val VecSet *)
(* val Id cpt *)
type : int32
(* val Plus32 *)
(* val Mul32 *)
(* val Id height *)
(* val Id img *)
closing module Math
closing module Float64
closing module Std
(* val2 b Open *)
(* val2 End *)
(* val2 Open *)
opening module Std
(* val2 Bind *)
(* val2 b Open *)
(* val2 End *)
(* val2 Open *)
opening module Math
opening module Float64
(* val2 Bind *)
(* val2 Plus32 *)
(* val2 Mul32 *)
(* val2 Id y *)
(* val2 Plus32 *)
(* val2 Mul32 *)
(* val2 Bind *)
(* val2 Plus32 *)
(* val2 Mul32 *)
(* val2 Id x *)
(* val2 Plus32 *)
(* val2 Mul32 *)
(* val2 Seq *)
(* val2 If *)
(* val2 App return *)
(* val2 parse_app App return *)
(* val2 parse_app_app Id return *)
(* val2 Noop *)
(* val2 BoolOr *)
(* val2 BoolGtE32 *)
(* val2 Ref *)
(* val2 Id x *)
(* val2 BoolGtE32 *)
(* val2 Ref *)
(* val2 Id y *)
(* val2 Bind *)
(* val2 Plus32 *)
(* val2 Id x0 *)
(* val2 Plus32 *)
(* val2 Bind *)
(* val2 Plus32 *)
(* val2 Id y0 *)
(* val2 Plus32 *)
(* val2 Bind *)
(* val2 Int32 *)
(* val2 Id cpt *)
(* val2 Int32 *)
(* val2 Bind *)
(* val2 Id zero *)
(* val2 Id x1 *)
(* val2 Id zero *)
(* val2 Bind *)
(* val2 Id zero *)
(* val2 Id y1 *)
(* val2 Id zero *)
(* val2 Bind *)
(* val2 Id zero *)
(* val2 Id x2 *)
(* val2 Id zero *)
(* val2 Bind *)
(* val2 Id zero *)
(* val2 Id y2 *)
(* val2 Id zero *)
(* val2 Bind *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App minus *)
(* val2 parse_app_app Id minus *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App div *)
(* val2 parse_app_app Id div *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App mul *)
(* val2 parse_app_app Id mul *)
(* val2 App of_float32 *)
(* val2 parse_app App of_float32 *)
(* val2 parse_app_app Id of_float32 *)
(* val2 Float32 *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App div *)
(* val2 parse_app_app Id div *)
(* val2 App float64 *)
(* val2 parse_app App float64 *)
(* val2 parse_app_app Id float64 *)
(* val2 Id x0 *)
(* val2 App float64 *)
(* val2 parse_app App float64 *)
(* val2 parse_app_app Id float64 *)
(* val2 Ref *)
(* val2 App of_float32 *)
(* val2 parse_app App of_float32 *)
(* val2 parse_app_app Id of_float32 *)
(* val2 Id zoom *)
(* val2 App of_float32 *)
(* val2 parse_app App of_float32 *)
(* val2 parse_app_app Id of_float32 *)
(* val2 Float32 *)
(* val2 Id a *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App minus *)
(* val2 parse_app_app Id minus *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App div *)
(* val2 parse_app_app Id div *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App mul *)
(* val2 parse_app_app Id mul *)
(* val2 App of_float32 *)
(* val2 parse_app App of_float32 *)
(* val2 parse_app_app Id of_float32 *)
(* val2 Float32 *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App div *)
(* val2 parse_app_app Id div *)
(* val2 App float64 *)
(* val2 parse_app App float64 *)
(* val2 parse_app_app Id float64 *)
(* val2 Id x0 *)
(* val2 App float64 *)
(* val2 parse_app App float64 *)
(* val2 parse_app_app Id float64 *)
(* val2 Ref *)
(* val2 App of_float32 *)
(* val2 parse_app App of_float32 *)
(* val2 parse_app_app Id of_float32 *)
(* val2 Id zoom *)
(* val2 App of_float32 *)
(* val2 parse_app App of_float32 *)
(* val2 parse_app_app Id of_float32 *)
(* val2 Float32 *)
(* val2 Bind *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App minus *)
(* val2 parse_app_app Id minus *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App div *)
(* val2 parse_app_app Id div *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App mul *)
(* val2 parse_app_app Id mul *)
(* val2 App of_float32 *)
(* val2 parse_app App of_float32 *)
(* val2 parse_app_app Id of_float32 *)
(* val2 Float32 *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App div *)
(* val2 parse_app_app Id div *)
(* val2 App float64 *)
(* val2 parse_app App float64 *)
(* val2 parse_app_app Id float64 *)
(* val2 Id y0 *)
(* val2 App float64 *)
(* val2 parse_app App float64 *)
(* val2 parse_app_app Id float64 *)
(* val2 Ref *)
(* val2 App of_float32 *)
(* val2 parse_app App of_float32 *)
(* val2 parse_app_app Id of_float32 *)
(* val2 Id zoom *)
(* val2 App of_float32 *)
(* val2 parse_app App of_float32 *)
(* val2 parse_app_app Id of_float32 *)
(* val2 Float32 *)
(* val2 Id b *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App minus *)
(* val2 parse_app_app Id minus *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App div *)
(* val2 parse_app_app Id div *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App mul *)
(* val2 parse_app_app Id mul *)
(* val2 App of_float32 *)
(* val2 parse_app App of_float32 *)
(* val2 parse_app_app Id of_float32 *)
(* val2 Float32 *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App div *)
(* val2 parse_app_app Id div *)
(* val2 App float64 *)
(* val2 parse_app App float64 *)
(* val2 parse_app_app Id float64 *)
(* val2 Id y0 *)
(* val2 App float64 *)
(* val2 parse_app App float64 *)
(* val2 parse_app_app Id float64 *)
(* val2 Ref *)
(* val2 App of_float32 *)
(* val2 parse_app App of_float32 *)
(* val2 parse_app_app Id of_float32 *)
(* val2 Id zoom *)
(* val2 App of_float32 *)
(* val2 parse_app App of_float32 *)
(* val2 parse_app_app Id of_float32 *)
(* val2 Float32 *)
(* val2 Bind *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App add *)
(* val2 parse_app_app Id add *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App mul *)
(* val2 parse_app_app Id mul *)
(* val2 Id x1 *)
(* val2 Id x1 *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App mul *)
(* val2 parse_app_app Id mul *)
(* val2 Id y1 *)
(* val2 Id y1 *)
(* val2 Id norm *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App add *)
(* val2 parse_app_app Id add *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App mul *)
(* val2 parse_app_app Id mul *)
(* val2 Id x1 *)
(* val2 Id x1 *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App mul *)
(* val2 parse_app_app Id mul *)
(* val2 Id y1 *)
(* val2 Id y1 *)
(* val2 Seq *)
(* val2 While *)
(* val2 BoolAnd *)
(* val2 BoolLtEF *)
(* val2 Float32 *)
(* val2 App to_float32 *)
(* val2 parse_app App to_float32 *)
(* val2 parse_app_app Id to_float32 *)
(* val2 Id norm *)
(* val2 BoolLt32 *)
(* val2 Seq *)
(* val2 Acc *)
(* val2 Id cpt *)
(* val2 Plus32 *)
(* val2 Seq *)
(* val2 Acc *)
(* val2 Id x2 *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App add *)
(* val2 parse_app_app Id add *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App minus *)
(* val2 parse_app_app Id minus *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App mul *)
(* val2 parse_app_app Id mul *)
(* val2 Id x1 *)
(* val2 Id x1 *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App mul *)
(* val2 parse_app_app Id mul *)
(* val2 Id y1 *)
(* val2 Id y1 *)
(* val2 Id a *)
(* val2 Seq *)
(* val2 Acc *)
(* val2 Id y2 *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App add *)
(* val2 parse_app_app Id add *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App mul *)
(* val2 parse_app_app Id mul *)
(* val2 App of_float32 *)
(* val2 parse_app App of_float32 *)
(* val2 parse_app_app Id of_float32 *)
(* val2 Float32 *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App mul *)
(* val2 parse_app_app Id mul *)
(* val2 Id x1 *)
(* val2 Id y1 *)
(* val2 Id b *)
(* val2 Seq *)
(* val2 Acc *)
(* val2 Id x1 *)
(* val2 Id x2 *)
(* val2 Seq *)
(* val2 Acc *)
(* val2 Id y1 *)
(* val2 Id y2 *)
(* val2 Acc *)
(* val2 Id norm *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App add *)
(* val2 parse_app_app Id add *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App mul *)
(* val2 parse_app_app Id mul *)
(* val2 Id x1 *)
(* val2 Id x1 *)
(* val2 App *)
(* val2 parse_app App *)
(* val2 parse_app_app App mul *)
(* val2 parse_app_app Id mul *)
(* val2 Id y1 *)
(* val2 Id y1 *)
(* val2 VecSet *)
(* val2 Id cpt *)
(* val2 VecGet *)
(* val2 Plus32 *)
(* val2 Mul32 *)
(* val2 Id img *)
closing module Math
closing module Float64
closing module Std
