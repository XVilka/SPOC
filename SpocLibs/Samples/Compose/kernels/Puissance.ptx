	.version 1.4
	.target sm_13
	// compiled with C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v4.1\bin/../open64/lib//be.exe
	// nvopencc 4.1 built on 2011-11-18

	//-----------------------------------------------------------
	// Compiling c:/windows/temp/tmpxft_00001ed4_00000000-11_Puissance.cpp3.i (C:/Users/MATHIA~1/ccBI#.a08004)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:sm_13, Endian:little, Pointer Size:64
	//  -O3	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"c:/windows/temp/tmpxft_00001ed4_00000000-10_Puissance.cudafe2.gpu"
	.file	2	"c:\program files (x86)\microsoft visual studio 10.0\vc\include\codeanalysis\sourceannotations.h"
	.file	3	"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v4.1\bin/../include\crt/device_runtime.h"
	.file	4	"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v4.1\bin/../include\host_defines.h"
	.file	5	"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v4.1\bin/../include\builtin_types.h"
	.file	6	"c:\program files\nvidia gpu computing toolkit\cuda\v4.1\include\device_types.h"
	.file	7	"c:\program files\nvidia gpu computing toolkit\cuda\v4.1\include\host_defines.h"
	.file	8	"c:\program files\nvidia gpu computing toolkit\cuda\v4.1\include\driver_types.h"
	.file	9	"c:\program files\nvidia gpu computing toolkit\cuda\v4.1\include\surface_types.h"
	.file	10	"c:\program files\nvidia gpu computing toolkit\cuda\v4.1\include\texture_types.h"
	.file	11	"c:\program files\nvidia gpu computing toolkit\cuda\v4.1\include\vector_types.h"
	.file	12	"c:\program files\nvidia gpu computing toolkit\cuda\v4.1\include\builtin_types.h"
	.file	13	"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v4.1\bin/../include\device_launch_parameters.h"
	.file	14	"c:\program files\nvidia gpu computing toolkit\cuda\v4.1\include\crt\storage_class.h"
	.file	15	"kernels/Puissance.cu"
	.file	16	"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v4.1\bin/../include\common_functions.h"
	.file	17	"c:\program files\nvidia gpu computing toolkit\cuda\v4.1\include\math_functions.h"
	.file	18	"c:\program files\nvidia gpu computing toolkit\cuda\v4.1\include\math_constants.h"
	.file	19	"c:\program files\nvidia gpu computing toolkit\cuda\v4.1\include\device_functions.h"
	.file	20	"c:\program files\nvidia gpu computing toolkit\cuda\v4.1\include\sm_11_atomic_functions.h"
	.file	21	"c:\program files\nvidia gpu computing toolkit\cuda\v4.1\include\sm_12_atomic_functions.h"
	.file	22	"c:\program files\nvidia gpu computing toolkit\cuda\v4.1\include\sm_13_double_functions.h"
	.file	23	"c:\program files\nvidia gpu computing toolkit\cuda\v4.1\include\sm_20_atomic_functions.h"
	.file	24	"c:\program files\nvidia gpu computing toolkit\cuda\v4.1\include\sm_20_intrinsics.h"
	.file	25	"c:\program files\nvidia gpu computing toolkit\cuda\v4.1\include\surface_functions.h"
	.file	26	"c:\program files\nvidia gpu computing toolkit\cuda\v4.1\include\texture_fetch_functions.h"
	.file	27	"c:\program files\nvidia gpu computing toolkit\cuda\v4.1\include\math_functions_dbl_ptx3.h"


	.entry init (
		.param .u64 __cudaparm_init_A,
		.param .u64 __cudaparm_init_V,
		.param .u64 __cudaparm_init_VN,
		.param .s32 __cudaparm_init_size,
		.param .s32 __cudaparm_init_n)
	{
	.reg .u16 %rh<4>;
	.reg .u32 %r<13>;
	.reg .u64 %rd<11>;
	.reg .f64 %fd<5>;
	.reg .pred %p<5>;
	.loc	15	40	0
$LDWbegin_init:
	mov.u16 	%rh1, %ctaid.x;
	mov.u16 	%rh2, %ntid.x;
	mul.wide.u16 	%r1, %rh1, %rh2;
	cvt.u32.u16 	%r2, %tid.x;
	add.u32 	%r3, %r2, %r1;
	ld.param.s32 	%r4, [__cudaparm_init_size];
	setp.gt.s32 	%p1, %r4, %r3;
	@%p1 bra 	$Lt_0_2306;
	bra.uni 	$LBB10_init;
$Lt_0_2306:
	.loc	15	43	0
	ld.param.s32 	%r5, [__cudaparm_init_n];
	mov.u32 	%r6, 0;
	setp.le.s32 	%p2, %r5, %r6;
	@%p2 bra 	$Lt_0_3586;
	ld.param.s32 	%r5, [__cudaparm_init_n];
	mov.s32 	%r7, %r5;
	mul.lo.s32 	%r8, %r5, %r3;
	ld.param.u64 	%rd1, [__cudaparm_init_V];
	mov.s32 	%r9, %r8;
	add.s32 	%r10, %r8, %r5;
	ld.param.u64 	%rd2, [__cudaparm_init_A];
	cvt.s64.s32 	%rd3, %r8;
	mul.wide.s32 	%rd4, %r8, 8;
	add.u64 	%rd5, %rd2, %rd4;
	mov.f64 	%fd1, 0d0000000000000000;	// 0
	mov.s32 	%r11, %r7;
$Lt_0_3074:
 //<loop> Loop body line 43, nesting depth: 1, estimated iterations: unknown
	.loc	15	47	0
	ld.global.f64 	%fd2, [%rd5+0];
	ld.global.f64 	%fd3, [%rd1+0];
	mad.rn.f64 	%fd1, %fd2, %fd3, %fd1;
	add.s32 	%r9, %r9, 1;
	add.u64 	%rd5, %rd5, 8;
	add.u64 	%rd1, %rd1, 8;
	setp.ne.s32 	%p3, %r9, %r10;
	@%p3 bra 	$Lt_0_3074;
	bra.uni 	$Lt_0_2562;
$Lt_0_3586:
	mov.f64 	%fd1, 0d0000000000000000;	// 0
$Lt_0_2562:
	.loc	15	49	0
	ld.param.u64 	%rd6, [__cudaparm_init_VN];
	cvt.s64.s32 	%rd7, %r3;
	mul.wide.s32 	%rd8, %r3, 8;
	add.u64 	%rd9, %rd6, %rd8;
	st.global.f64 	[%rd9+0], %fd1;
$LBB10_init:
	.loc	15	51	0
	exit;
$LDWend_init:
	} // init

	.entry divide (
		.param .u64 __cudaparm_divide_VN,
		.param .u64 __cudaparm_divide_max,
		.param .s32 __cudaparm_divide_size)
	{
	.reg .u16 %rh<4>;
	.reg .u32 %r<6>;
	.reg .u64 %rd<7>;
	.reg .f64 %fd<5>;
	.reg .pred %p<3>;
	.loc	15	53	0
$LDWbegin_divide:
	mov.u16 	%rh1, %ctaid.x;
	mov.u16 	%rh2, %ntid.x;
	mul.wide.u16 	%r1, %rh1, %rh2;
	cvt.u32.u16 	%r2, %tid.x;
	add.u32 	%r3, %r2, %r1;
	ld.param.s32 	%r4, [__cudaparm_divide_size];
	setp.gt.s32 	%p1, %r4, %r3;
	@%p1 bra 	$Lt_1_1282;
	bra.uni 	$LBB4_divide;
$Lt_1_1282:
	.loc	15	57	0
	ld.param.u64 	%rd1, [__cudaparm_divide_VN];
	cvt.s64.s32 	%rd2, %r3;
	mul.wide.s32 	%rd3, %r3, 8;
	add.u64 	%rd4, %rd1, %rd3;
	ld.global.f64 	%fd1, [%rd4+0];
	ld.param.u64 	%rd5, [__cudaparm_divide_max];
	ld.global.f64 	%fd2, [%rd5+0];
	div.rn.f64 	%fd3, %fd1, %fd2;
	st.global.f64 	[%rd4+0], %fd3;
$LBB4_divide:
	.loc	15	58	0
	exit;
$LDWend_divide:
	} // divide

	.entry norme (
		.param .u64 __cudaparm_norme_VN,
		.param .u64 __cudaparm_norme_V,
		.param .u64 __cudaparm_norme_v_norme,
		.param .s32 __cudaparm_norme_size)
	{
	.reg .u16 %rh<4>;
	.reg .u32 %r<6>;
	.reg .u64 %rd<10>;
	.reg .f64 %fd<7>;
	.reg .pred %p<3>;
	.loc	15	60	0
$LDWbegin_norme:
	mov.u16 	%rh1, %ctaid.x;
	mov.u16 	%rh2, %ntid.x;
	mul.wide.u16 	%r1, %rh1, %rh2;
	cvt.u32.u16 	%r2, %tid.x;
	add.u32 	%r3, %r2, %r1;
	ld.param.s32 	%r4, [__cudaparm_norme_size];
	setp.gt.s32 	%p1, %r4, %r3;
	@%p1 bra 	$Lt_2_1282;
	bra.uni 	$LBB4_norme;
$Lt_2_1282:
	.loc	15	65	0
	cvt.s64.s32 	%rd1, %r3;
	mul.wide.s32 	%rd2, %r3, 8;
	ld.param.u64 	%rd3, [__cudaparm_norme_VN];
	add.u64 	%rd4, %rd3, %rd2;
	ld.param.u64 	%rd5, [__cudaparm_norme_V];
	add.u64 	%rd6, %rd5, %rd2;
	ld.global.f64 	%fd1, [%rd4+0];
	ld.global.f64 	%fd2, [%rd6+0];
	sub.f64 	%fd3, %fd1, %fd2;
	abs.f64 	%fd4, %fd3;
	ld.param.u64 	%rd7, [__cudaparm_norme_v_norme];
	add.u64 	%rd8, %rd7, %rd2;
	st.global.f64 	[%rd8+0], %fd4;
	.loc	15	66	0
	ld.global.f64 	%fd5, [%rd4+0];
	st.global.f64 	[%rd6+0], %fd5;
$LBB4_norme:
	.loc	15	69	0
	exit;
$LDWend_norme:
	} // norme

